// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: transport_conf.proto

#include "transport_conf.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_transport_5fconf_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_transport_5fconf_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CommunicationMode;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_transport_5fconf_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ResourceLimit;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_transport_5fconf_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RtpsParticipantAttr;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_transport_5fconf_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ShmMulticastLocator;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_transport_5fconf_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ShmConf;
}  // namespace protobuf_transport_5fconf_2eproto
namespace apollo {
namespace cyber {
namespace proto {
class ShmMulticastLocatorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ShmMulticastLocator>
      _instance;
} _ShmMulticastLocator_default_instance_;
class ShmConfDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ShmConf>
      _instance;
} _ShmConf_default_instance_;
class RtpsParticipantAttrDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RtpsParticipantAttr>
      _instance;
} _RtpsParticipantAttr_default_instance_;
class CommunicationModeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CommunicationMode>
      _instance;
} _CommunicationMode_default_instance_;
class ResourceLimitDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResourceLimit>
      _instance;
} _ResourceLimit_default_instance_;
class TransportConfDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TransportConf>
      _instance;
} _TransportConf_default_instance_;
}  // namespace proto
}  // namespace cyber
}  // namespace apollo
namespace protobuf_transport_5fconf_2eproto {
static void InitDefaultsShmMulticastLocator() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::cyber::proto::_ShmMulticastLocator_default_instance_;
    new (ptr) ::apollo::cyber::proto::ShmMulticastLocator();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::cyber::proto::ShmMulticastLocator::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ShmMulticastLocator =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsShmMulticastLocator}, {}};

static void InitDefaultsShmConf() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::cyber::proto::_ShmConf_default_instance_;
    new (ptr) ::apollo::cyber::proto::ShmConf();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::cyber::proto::ShmConf::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ShmConf =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsShmConf}, {
      &protobuf_transport_5fconf_2eproto::scc_info_ShmMulticastLocator.base,}};

static void InitDefaultsRtpsParticipantAttr() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::cyber::proto::_RtpsParticipantAttr_default_instance_;
    new (ptr) ::apollo::cyber::proto::RtpsParticipantAttr();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::cyber::proto::RtpsParticipantAttr::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RtpsParticipantAttr =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRtpsParticipantAttr}, {}};

static void InitDefaultsCommunicationMode() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::cyber::proto::_CommunicationMode_default_instance_;
    new (ptr) ::apollo::cyber::proto::CommunicationMode();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::cyber::proto::CommunicationMode::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CommunicationMode =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCommunicationMode}, {}};

static void InitDefaultsResourceLimit() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::cyber::proto::_ResourceLimit_default_instance_;
    new (ptr) ::apollo::cyber::proto::ResourceLimit();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::cyber::proto::ResourceLimit::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ResourceLimit =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsResourceLimit}, {}};

static void InitDefaultsTransportConf() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::cyber::proto::_TransportConf_default_instance_;
    new (ptr) ::apollo::cyber::proto::TransportConf();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::cyber::proto::TransportConf::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_TransportConf =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsTransportConf}, {
      &protobuf_transport_5fconf_2eproto::scc_info_ShmConf.base,
      &protobuf_transport_5fconf_2eproto::scc_info_RtpsParticipantAttr.base,
      &protobuf_transport_5fconf_2eproto::scc_info_CommunicationMode.base,
      &protobuf_transport_5fconf_2eproto::scc_info_ResourceLimit.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ShmMulticastLocator.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ShmConf.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RtpsParticipantAttr.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CommunicationMode.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ResourceLimit.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TransportConf.base);
}

::google::protobuf::Metadata file_level_metadata[6];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::cyber::proto::ShmMulticastLocator, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::cyber::proto::ShmMulticastLocator, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::cyber::proto::ShmMulticastLocator, ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::cyber::proto::ShmMulticastLocator, port_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::cyber::proto::ShmConf, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::cyber::proto::ShmConf, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::cyber::proto::ShmConf, notifier_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::cyber::proto::ShmConf, shm_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::cyber::proto::ShmConf, shm_locator_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::cyber::proto::RtpsParticipantAttr, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::cyber::proto::RtpsParticipantAttr, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::cyber::proto::RtpsParticipantAttr, lease_duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::cyber::proto::RtpsParticipantAttr, announcement_period_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::cyber::proto::RtpsParticipantAttr, domain_id_gain_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::cyber::proto::RtpsParticipantAttr, port_base_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::cyber::proto::CommunicationMode, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::cyber::proto::CommunicationMode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::cyber::proto::CommunicationMode, same_proc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::cyber::proto::CommunicationMode, diff_proc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::cyber::proto::CommunicationMode, diff_host_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::cyber::proto::ResourceLimit, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::cyber::proto::ResourceLimit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::cyber::proto::ResourceLimit, max_history_depth_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::cyber::proto::TransportConf, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::cyber::proto::TransportConf, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::cyber::proto::TransportConf, shm_conf_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::cyber::proto::TransportConf, participant_attr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::cyber::proto::TransportConf, communication_mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::cyber::proto::TransportConf, resource_limit_),
  0,
  1,
  2,
  3,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::apollo::cyber::proto::ShmMulticastLocator)},
  { 9, 17, sizeof(::apollo::cyber::proto::ShmConf)},
  { 20, 29, sizeof(::apollo::cyber::proto::RtpsParticipantAttr)},
  { 33, 41, sizeof(::apollo::cyber::proto::CommunicationMode)},
  { 44, 50, sizeof(::apollo::cyber::proto::ResourceLimit)},
  { 51, 60, sizeof(::apollo::cyber::proto::TransportConf)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::cyber::proto::_ShmMulticastLocator_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::cyber::proto::_ShmConf_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::cyber::proto::_RtpsParticipantAttr_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::cyber::proto::_CommunicationMode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::cyber::proto::_ResourceLimit_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::cyber::proto::_TransportConf_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "transport_conf.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\024transport_conf.proto\022\022apollo.cyber.pro"
      "to\"/\n\023ShmMulticastLocator\022\n\n\002ip\030\001 \001(\t\022\014\n"
      "\004port\030\002 \001(\r\"p\n\007ShmConf\022\025\n\rnotifier_type\030"
      "\001 \001(\t\022\020\n\010shm_type\030\002 \001(\t\022<\n\013shm_locator\030\003"
      " \001(\0132\'.apollo.cyber.proto.ShmMulticastLo"
      "cator\"\210\001\n\023RtpsParticipantAttr\022\032\n\016lease_d"
      "uration\030\001 \001(\005:\00212\022\036\n\023announcement_period"
      "\030\002 \001(\005:\0013\022\033\n\016domain_id_gain\030\003 \001(\r:\003200\022\030"
      "\n\tport_base\030\004 \001(\r:\00510000\"\304\001\n\021Communicati"
      "onMode\022:\n\tsame_proc\030\001 \001(\0162 .apollo.cyber"
      ".proto.OptionalMode:\005INTRA\0228\n\tdiff_proc\030"
      "\002 \001(\0162 .apollo.cyber.proto.OptionalMode:"
      "\003SHM\0229\n\tdiff_host\030\003 \001(\0162 .apollo.cyber.p"
      "roto.OptionalMode:\004RTPS\"0\n\rResourceLimit"
      "\022\037\n\021max_history_depth\030\001 \001(\r:\0041000\"\377\001\n\rTr"
      "ansportConf\022-\n\010shm_conf\030\001 \001(\0132\033.apollo.c"
      "yber.proto.ShmConf\022A\n\020participant_attr\030\002"
      " \001(\0132\'.apollo.cyber.proto.RtpsParticipan"
      "tAttr\022A\n\022communication_mode\030\003 \001(\0132%.apol"
      "lo.cyber.proto.CommunicationMode\0229\n\016reso"
      "urce_limit\030\004 \001(\0132!.apollo.cyber.proto.Re"
      "sourceLimit*8\n\014OptionalMode\022\n\n\006HYBRID\020\000\022"
      "\t\n\005INTRA\020\001\022\007\n\003SHM\020\002\022\010\n\004RTPS\020\003"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 909);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "transport_conf.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_transport_5fconf_2eproto
namespace apollo {
namespace cyber {
namespace proto {
const ::google::protobuf::EnumDescriptor* OptionalMode_descriptor() {
  protobuf_transport_5fconf_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_transport_5fconf_2eproto::file_level_enum_descriptors[0];
}
bool OptionalMode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void ShmMulticastLocator::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShmMulticastLocator::kIpFieldNumber;
const int ShmMulticastLocator::kPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShmMulticastLocator::ShmMulticastLocator()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_transport_5fconf_2eproto::scc_info_ShmMulticastLocator.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.cyber.proto.ShmMulticastLocator)
}
ShmMulticastLocator::ShmMulticastLocator(const ShmMulticastLocator& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ip()) {
    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  port_ = from.port_;
  // @@protoc_insertion_point(copy_constructor:apollo.cyber.proto.ShmMulticastLocator)
}

void ShmMulticastLocator::SharedCtor() {
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_ = 0u;
}

ShmMulticastLocator::~ShmMulticastLocator() {
  // @@protoc_insertion_point(destructor:apollo.cyber.proto.ShmMulticastLocator)
  SharedDtor();
}

void ShmMulticastLocator::SharedDtor() {
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ShmMulticastLocator::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ShmMulticastLocator::descriptor() {
  ::protobuf_transport_5fconf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_transport_5fconf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ShmMulticastLocator& ShmMulticastLocator::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_transport_5fconf_2eproto::scc_info_ShmMulticastLocator.base);
  return *internal_default_instance();
}


void ShmMulticastLocator::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.cyber.proto.ShmMulticastLocator)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ip_.ClearNonDefaultToEmptyNoArena();
  }
  port_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShmMulticastLocator::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.cyber.proto.ShmMulticastLocator)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string ip = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ip().data(), static_cast<int>(this->ip().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.cyber.proto.ShmMulticastLocator.ip");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 port = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_port();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.cyber.proto.ShmMulticastLocator)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.cyber.proto.ShmMulticastLocator)
  return false;
#undef DO_
}

void ShmMulticastLocator::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.cyber.proto.ShmMulticastLocator)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string ip = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ip().data(), static_cast<int>(this->ip().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.cyber.proto.ShmMulticastLocator.ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ip(), output);
  }

  // optional uint32 port = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->port(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.cyber.proto.ShmMulticastLocator)
}

::google::protobuf::uint8* ShmMulticastLocator::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.cyber.proto.ShmMulticastLocator)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string ip = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ip().data(), static_cast<int>(this->ip().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.cyber.proto.ShmMulticastLocator.ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ip(), target);
  }

  // optional uint32 port = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->port(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.cyber.proto.ShmMulticastLocator)
  return target;
}

size_t ShmMulticastLocator::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.cyber.proto.ShmMulticastLocator)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string ip = 1;
    if (has_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ip());
    }

    // optional uint32 port = 2;
    if (has_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->port());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShmMulticastLocator::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.cyber.proto.ShmMulticastLocator)
  GOOGLE_DCHECK_NE(&from, this);
  const ShmMulticastLocator* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShmMulticastLocator>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.cyber.proto.ShmMulticastLocator)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.cyber.proto.ShmMulticastLocator)
    MergeFrom(*source);
  }
}

void ShmMulticastLocator::MergeFrom(const ShmMulticastLocator& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.cyber.proto.ShmMulticastLocator)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_ip();
      ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
    }
    if (cached_has_bits & 0x00000002u) {
      port_ = from.port_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ShmMulticastLocator::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.cyber.proto.ShmMulticastLocator)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShmMulticastLocator::CopyFrom(const ShmMulticastLocator& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.cyber.proto.ShmMulticastLocator)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShmMulticastLocator::IsInitialized() const {
  return true;
}

void ShmMulticastLocator::Swap(ShmMulticastLocator* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShmMulticastLocator::InternalSwap(ShmMulticastLocator* other) {
  using std::swap;
  ip_.Swap(&other->ip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(port_, other->port_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ShmMulticastLocator::GetMetadata() const {
  protobuf_transport_5fconf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_transport_5fconf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ShmConf::InitAsDefaultInstance() {
  ::apollo::cyber::proto::_ShmConf_default_instance_._instance.get_mutable()->shm_locator_ = const_cast< ::apollo::cyber::proto::ShmMulticastLocator*>(
      ::apollo::cyber::proto::ShmMulticastLocator::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShmConf::kNotifierTypeFieldNumber;
const int ShmConf::kShmTypeFieldNumber;
const int ShmConf::kShmLocatorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShmConf::ShmConf()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_transport_5fconf_2eproto::scc_info_ShmConf.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.cyber.proto.ShmConf)
}
ShmConf::ShmConf(const ShmConf& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  notifier_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_notifier_type()) {
    notifier_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.notifier_type_);
  }
  shm_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_shm_type()) {
    shm_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shm_type_);
  }
  if (from.has_shm_locator()) {
    shm_locator_ = new ::apollo::cyber::proto::ShmMulticastLocator(*from.shm_locator_);
  } else {
    shm_locator_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:apollo.cyber.proto.ShmConf)
}

void ShmConf::SharedCtor() {
  notifier_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shm_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shm_locator_ = NULL;
}

ShmConf::~ShmConf() {
  // @@protoc_insertion_point(destructor:apollo.cyber.proto.ShmConf)
  SharedDtor();
}

void ShmConf::SharedDtor() {
  notifier_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shm_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete shm_locator_;
}

void ShmConf::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ShmConf::descriptor() {
  ::protobuf_transport_5fconf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_transport_5fconf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ShmConf& ShmConf::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_transport_5fconf_2eproto::scc_info_ShmConf.base);
  return *internal_default_instance();
}


void ShmConf::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.cyber.proto.ShmConf)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      notifier_type_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      shm_type_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(shm_locator_ != NULL);
      shm_locator_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShmConf::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.cyber.proto.ShmConf)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string notifier_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_notifier_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->notifier_type().data(), static_cast<int>(this->notifier_type().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.cyber.proto.ShmConf.notifier_type");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string shm_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_shm_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->shm_type().data(), static_cast<int>(this->shm_type().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.cyber.proto.ShmConf.shm_type");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.cyber.proto.ShmMulticastLocator shm_locator = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_shm_locator()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.cyber.proto.ShmConf)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.cyber.proto.ShmConf)
  return false;
#undef DO_
}

void ShmConf::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.cyber.proto.ShmConf)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string notifier_type = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->notifier_type().data(), static_cast<int>(this->notifier_type().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.cyber.proto.ShmConf.notifier_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->notifier_type(), output);
  }

  // optional string shm_type = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->shm_type().data(), static_cast<int>(this->shm_type().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.cyber.proto.ShmConf.shm_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->shm_type(), output);
  }

  // optional .apollo.cyber.proto.ShmMulticastLocator shm_locator = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_shm_locator(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.cyber.proto.ShmConf)
}

::google::protobuf::uint8* ShmConf::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.cyber.proto.ShmConf)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string notifier_type = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->notifier_type().data(), static_cast<int>(this->notifier_type().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.cyber.proto.ShmConf.notifier_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->notifier_type(), target);
  }

  // optional string shm_type = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->shm_type().data(), static_cast<int>(this->shm_type().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.cyber.proto.ShmConf.shm_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->shm_type(), target);
  }

  // optional .apollo.cyber.proto.ShmMulticastLocator shm_locator = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_shm_locator(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.cyber.proto.ShmConf)
  return target;
}

size_t ShmConf::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.cyber.proto.ShmConf)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string notifier_type = 1;
    if (has_notifier_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->notifier_type());
    }

    // optional string shm_type = 2;
    if (has_shm_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->shm_type());
    }

    // optional .apollo.cyber.proto.ShmMulticastLocator shm_locator = 3;
    if (has_shm_locator()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *shm_locator_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShmConf::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.cyber.proto.ShmConf)
  GOOGLE_DCHECK_NE(&from, this);
  const ShmConf* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShmConf>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.cyber.proto.ShmConf)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.cyber.proto.ShmConf)
    MergeFrom(*source);
  }
}

void ShmConf::MergeFrom(const ShmConf& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.cyber.proto.ShmConf)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_notifier_type();
      notifier_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.notifier_type_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_shm_type();
      shm_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shm_type_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_shm_locator()->::apollo::cyber::proto::ShmMulticastLocator::MergeFrom(from.shm_locator());
    }
  }
}

void ShmConf::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.cyber.proto.ShmConf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShmConf::CopyFrom(const ShmConf& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.cyber.proto.ShmConf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShmConf::IsInitialized() const {
  return true;
}

void ShmConf::Swap(ShmConf* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShmConf::InternalSwap(ShmConf* other) {
  using std::swap;
  notifier_type_.Swap(&other->notifier_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  shm_type_.Swap(&other->shm_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(shm_locator_, other->shm_locator_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ShmConf::GetMetadata() const {
  protobuf_transport_5fconf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_transport_5fconf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RtpsParticipantAttr::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RtpsParticipantAttr::kLeaseDurationFieldNumber;
const int RtpsParticipantAttr::kAnnouncementPeriodFieldNumber;
const int RtpsParticipantAttr::kDomainIdGainFieldNumber;
const int RtpsParticipantAttr::kPortBaseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RtpsParticipantAttr::RtpsParticipantAttr()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_transport_5fconf_2eproto::scc_info_RtpsParticipantAttr.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.cyber.proto.RtpsParticipantAttr)
}
RtpsParticipantAttr::RtpsParticipantAttr(const RtpsParticipantAttr& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&lease_duration_, &from.lease_duration_,
    static_cast<size_t>(reinterpret_cast<char*>(&port_base_) -
    reinterpret_cast<char*>(&lease_duration_)) + sizeof(port_base_));
  // @@protoc_insertion_point(copy_constructor:apollo.cyber.proto.RtpsParticipantAttr)
}

void RtpsParticipantAttr::SharedCtor() {
  lease_duration_ = 12;
  announcement_period_ = 3;
  domain_id_gain_ = 200u;
  port_base_ = 10000u;
}

RtpsParticipantAttr::~RtpsParticipantAttr() {
  // @@protoc_insertion_point(destructor:apollo.cyber.proto.RtpsParticipantAttr)
  SharedDtor();
}

void RtpsParticipantAttr::SharedDtor() {
}

void RtpsParticipantAttr::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RtpsParticipantAttr::descriptor() {
  ::protobuf_transport_5fconf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_transport_5fconf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RtpsParticipantAttr& RtpsParticipantAttr::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_transport_5fconf_2eproto::scc_info_RtpsParticipantAttr.base);
  return *internal_default_instance();
}


void RtpsParticipantAttr::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.cyber.proto.RtpsParticipantAttr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    lease_duration_ = 12;
    announcement_period_ = 3;
    domain_id_gain_ = 200u;
    port_base_ = 10000u;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RtpsParticipantAttr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.cyber.proto.RtpsParticipantAttr)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 lease_duration = 1 [default = 12];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_lease_duration();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lease_duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 announcement_period = 2 [default = 3];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_announcement_period();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &announcement_period_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 domain_id_gain = 3 [default = 200];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_domain_id_gain();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &domain_id_gain_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 port_base = 4 [default = 10000];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_port_base();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &port_base_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.cyber.proto.RtpsParticipantAttr)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.cyber.proto.RtpsParticipantAttr)
  return false;
#undef DO_
}

void RtpsParticipantAttr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.cyber.proto.RtpsParticipantAttr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 lease_duration = 1 [default = 12];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->lease_duration(), output);
  }

  // optional int32 announcement_period = 2 [default = 3];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->announcement_period(), output);
  }

  // optional uint32 domain_id_gain = 3 [default = 200];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->domain_id_gain(), output);
  }

  // optional uint32 port_base = 4 [default = 10000];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->port_base(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.cyber.proto.RtpsParticipantAttr)
}

::google::protobuf::uint8* RtpsParticipantAttr::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.cyber.proto.RtpsParticipantAttr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 lease_duration = 1 [default = 12];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->lease_duration(), target);
  }

  // optional int32 announcement_period = 2 [default = 3];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->announcement_period(), target);
  }

  // optional uint32 domain_id_gain = 3 [default = 200];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->domain_id_gain(), target);
  }

  // optional uint32 port_base = 4 [default = 10000];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->port_base(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.cyber.proto.RtpsParticipantAttr)
  return target;
}

size_t RtpsParticipantAttr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.cyber.proto.RtpsParticipantAttr)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional int32 lease_duration = 1 [default = 12];
    if (has_lease_duration()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lease_duration());
    }

    // optional int32 announcement_period = 2 [default = 3];
    if (has_announcement_period()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->announcement_period());
    }

    // optional uint32 domain_id_gain = 3 [default = 200];
    if (has_domain_id_gain()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->domain_id_gain());
    }

    // optional uint32 port_base = 4 [default = 10000];
    if (has_port_base()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->port_base());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RtpsParticipantAttr::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.cyber.proto.RtpsParticipantAttr)
  GOOGLE_DCHECK_NE(&from, this);
  const RtpsParticipantAttr* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RtpsParticipantAttr>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.cyber.proto.RtpsParticipantAttr)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.cyber.proto.RtpsParticipantAttr)
    MergeFrom(*source);
  }
}

void RtpsParticipantAttr::MergeFrom(const RtpsParticipantAttr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.cyber.proto.RtpsParticipantAttr)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      lease_duration_ = from.lease_duration_;
    }
    if (cached_has_bits & 0x00000002u) {
      announcement_period_ = from.announcement_period_;
    }
    if (cached_has_bits & 0x00000004u) {
      domain_id_gain_ = from.domain_id_gain_;
    }
    if (cached_has_bits & 0x00000008u) {
      port_base_ = from.port_base_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RtpsParticipantAttr::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.cyber.proto.RtpsParticipantAttr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RtpsParticipantAttr::CopyFrom(const RtpsParticipantAttr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.cyber.proto.RtpsParticipantAttr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RtpsParticipantAttr::IsInitialized() const {
  return true;
}

void RtpsParticipantAttr::Swap(RtpsParticipantAttr* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RtpsParticipantAttr::InternalSwap(RtpsParticipantAttr* other) {
  using std::swap;
  swap(lease_duration_, other->lease_duration_);
  swap(announcement_period_, other->announcement_period_);
  swap(domain_id_gain_, other->domain_id_gain_);
  swap(port_base_, other->port_base_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RtpsParticipantAttr::GetMetadata() const {
  protobuf_transport_5fconf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_transport_5fconf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CommunicationMode::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CommunicationMode::kSameProcFieldNumber;
const int CommunicationMode::kDiffProcFieldNumber;
const int CommunicationMode::kDiffHostFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CommunicationMode::CommunicationMode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_transport_5fconf_2eproto::scc_info_CommunicationMode.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.cyber.proto.CommunicationMode)
}
CommunicationMode::CommunicationMode(const CommunicationMode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&diff_host_, &from.diff_host_,
    static_cast<size_t>(reinterpret_cast<char*>(&diff_proc_) -
    reinterpret_cast<char*>(&diff_host_)) + sizeof(diff_proc_));
  // @@protoc_insertion_point(copy_constructor:apollo.cyber.proto.CommunicationMode)
}

void CommunicationMode::SharedCtor() {
  diff_host_ = 3;
  same_proc_ = 1;
  diff_proc_ = 2;
}

CommunicationMode::~CommunicationMode() {
  // @@protoc_insertion_point(destructor:apollo.cyber.proto.CommunicationMode)
  SharedDtor();
}

void CommunicationMode::SharedDtor() {
}

void CommunicationMode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CommunicationMode::descriptor() {
  ::protobuf_transport_5fconf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_transport_5fconf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CommunicationMode& CommunicationMode::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_transport_5fconf_2eproto::scc_info_CommunicationMode.base);
  return *internal_default_instance();
}


void CommunicationMode::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.cyber.proto.CommunicationMode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    diff_host_ = 3;
    same_proc_ = 1;
    diff_proc_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CommunicationMode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.cyber.proto.CommunicationMode)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .apollo.cyber.proto.OptionalMode same_proc = 1 [default = INTRA];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::cyber::proto::OptionalMode_IsValid(value)) {
            set_same_proc(static_cast< ::apollo::cyber::proto::OptionalMode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.cyber.proto.OptionalMode diff_proc = 2 [default = SHM];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::cyber::proto::OptionalMode_IsValid(value)) {
            set_diff_proc(static_cast< ::apollo::cyber::proto::OptionalMode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.cyber.proto.OptionalMode diff_host = 3 [default = RTPS];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::cyber::proto::OptionalMode_IsValid(value)) {
            set_diff_host(static_cast< ::apollo::cyber::proto::OptionalMode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                3, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.cyber.proto.CommunicationMode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.cyber.proto.CommunicationMode)
  return false;
#undef DO_
}

void CommunicationMode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.cyber.proto.CommunicationMode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.cyber.proto.OptionalMode same_proc = 1 [default = INTRA];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->same_proc(), output);
  }

  // optional .apollo.cyber.proto.OptionalMode diff_proc = 2 [default = SHM];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->diff_proc(), output);
  }

  // optional .apollo.cyber.proto.OptionalMode diff_host = 3 [default = RTPS];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->diff_host(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.cyber.proto.CommunicationMode)
}

::google::protobuf::uint8* CommunicationMode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.cyber.proto.CommunicationMode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.cyber.proto.OptionalMode same_proc = 1 [default = INTRA];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->same_proc(), target);
  }

  // optional .apollo.cyber.proto.OptionalMode diff_proc = 2 [default = SHM];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->diff_proc(), target);
  }

  // optional .apollo.cyber.proto.OptionalMode diff_host = 3 [default = RTPS];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->diff_host(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.cyber.proto.CommunicationMode)
  return target;
}

size_t CommunicationMode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.cyber.proto.CommunicationMode)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional .apollo.cyber.proto.OptionalMode diff_host = 3 [default = RTPS];
    if (has_diff_host()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->diff_host());
    }

    // optional .apollo.cyber.proto.OptionalMode same_proc = 1 [default = INTRA];
    if (has_same_proc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->same_proc());
    }

    // optional .apollo.cyber.proto.OptionalMode diff_proc = 2 [default = SHM];
    if (has_diff_proc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->diff_proc());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CommunicationMode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.cyber.proto.CommunicationMode)
  GOOGLE_DCHECK_NE(&from, this);
  const CommunicationMode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CommunicationMode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.cyber.proto.CommunicationMode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.cyber.proto.CommunicationMode)
    MergeFrom(*source);
  }
}

void CommunicationMode::MergeFrom(const CommunicationMode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.cyber.proto.CommunicationMode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      diff_host_ = from.diff_host_;
    }
    if (cached_has_bits & 0x00000002u) {
      same_proc_ = from.same_proc_;
    }
    if (cached_has_bits & 0x00000004u) {
      diff_proc_ = from.diff_proc_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CommunicationMode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.cyber.proto.CommunicationMode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommunicationMode::CopyFrom(const CommunicationMode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.cyber.proto.CommunicationMode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommunicationMode::IsInitialized() const {
  return true;
}

void CommunicationMode::Swap(CommunicationMode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CommunicationMode::InternalSwap(CommunicationMode* other) {
  using std::swap;
  swap(diff_host_, other->diff_host_);
  swap(same_proc_, other->same_proc_);
  swap(diff_proc_, other->diff_proc_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CommunicationMode::GetMetadata() const {
  protobuf_transport_5fconf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_transport_5fconf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ResourceLimit::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResourceLimit::kMaxHistoryDepthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResourceLimit::ResourceLimit()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_transport_5fconf_2eproto::scc_info_ResourceLimit.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.cyber.proto.ResourceLimit)
}
ResourceLimit::ResourceLimit(const ResourceLimit& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  max_history_depth_ = from.max_history_depth_;
  // @@protoc_insertion_point(copy_constructor:apollo.cyber.proto.ResourceLimit)
}

void ResourceLimit::SharedCtor() {
  max_history_depth_ = 1000u;
}

ResourceLimit::~ResourceLimit() {
  // @@protoc_insertion_point(destructor:apollo.cyber.proto.ResourceLimit)
  SharedDtor();
}

void ResourceLimit::SharedDtor() {
}

void ResourceLimit::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ResourceLimit::descriptor() {
  ::protobuf_transport_5fconf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_transport_5fconf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResourceLimit& ResourceLimit::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_transport_5fconf_2eproto::scc_info_ResourceLimit.base);
  return *internal_default_instance();
}


void ResourceLimit::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.cyber.proto.ResourceLimit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  max_history_depth_ = 1000u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ResourceLimit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.cyber.proto.ResourceLimit)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 max_history_depth = 1 [default = 1000];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_max_history_depth();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &max_history_depth_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.cyber.proto.ResourceLimit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.cyber.proto.ResourceLimit)
  return false;
#undef DO_
}

void ResourceLimit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.cyber.proto.ResourceLimit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 max_history_depth = 1 [default = 1000];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->max_history_depth(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.cyber.proto.ResourceLimit)
}

::google::protobuf::uint8* ResourceLimit::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.cyber.proto.ResourceLimit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 max_history_depth = 1 [default = 1000];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->max_history_depth(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.cyber.proto.ResourceLimit)
  return target;
}

size_t ResourceLimit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.cyber.proto.ResourceLimit)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 max_history_depth = 1 [default = 1000];
  if (has_max_history_depth()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->max_history_depth());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResourceLimit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.cyber.proto.ResourceLimit)
  GOOGLE_DCHECK_NE(&from, this);
  const ResourceLimit* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResourceLimit>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.cyber.proto.ResourceLimit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.cyber.proto.ResourceLimit)
    MergeFrom(*source);
  }
}

void ResourceLimit::MergeFrom(const ResourceLimit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.cyber.proto.ResourceLimit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_max_history_depth()) {
    set_max_history_depth(from.max_history_depth());
  }
}

void ResourceLimit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.cyber.proto.ResourceLimit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResourceLimit::CopyFrom(const ResourceLimit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.cyber.proto.ResourceLimit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResourceLimit::IsInitialized() const {
  return true;
}

void ResourceLimit::Swap(ResourceLimit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResourceLimit::InternalSwap(ResourceLimit* other) {
  using std::swap;
  swap(max_history_depth_, other->max_history_depth_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ResourceLimit::GetMetadata() const {
  protobuf_transport_5fconf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_transport_5fconf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TransportConf::InitAsDefaultInstance() {
  ::apollo::cyber::proto::_TransportConf_default_instance_._instance.get_mutable()->shm_conf_ = const_cast< ::apollo::cyber::proto::ShmConf*>(
      ::apollo::cyber::proto::ShmConf::internal_default_instance());
  ::apollo::cyber::proto::_TransportConf_default_instance_._instance.get_mutable()->participant_attr_ = const_cast< ::apollo::cyber::proto::RtpsParticipantAttr*>(
      ::apollo::cyber::proto::RtpsParticipantAttr::internal_default_instance());
  ::apollo::cyber::proto::_TransportConf_default_instance_._instance.get_mutable()->communication_mode_ = const_cast< ::apollo::cyber::proto::CommunicationMode*>(
      ::apollo::cyber::proto::CommunicationMode::internal_default_instance());
  ::apollo::cyber::proto::_TransportConf_default_instance_._instance.get_mutable()->resource_limit_ = const_cast< ::apollo::cyber::proto::ResourceLimit*>(
      ::apollo::cyber::proto::ResourceLimit::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransportConf::kShmConfFieldNumber;
const int TransportConf::kParticipantAttrFieldNumber;
const int TransportConf::kCommunicationModeFieldNumber;
const int TransportConf::kResourceLimitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransportConf::TransportConf()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_transport_5fconf_2eproto::scc_info_TransportConf.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.cyber.proto.TransportConf)
}
TransportConf::TransportConf(const TransportConf& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_shm_conf()) {
    shm_conf_ = new ::apollo::cyber::proto::ShmConf(*from.shm_conf_);
  } else {
    shm_conf_ = NULL;
  }
  if (from.has_participant_attr()) {
    participant_attr_ = new ::apollo::cyber::proto::RtpsParticipantAttr(*from.participant_attr_);
  } else {
    participant_attr_ = NULL;
  }
  if (from.has_communication_mode()) {
    communication_mode_ = new ::apollo::cyber::proto::CommunicationMode(*from.communication_mode_);
  } else {
    communication_mode_ = NULL;
  }
  if (from.has_resource_limit()) {
    resource_limit_ = new ::apollo::cyber::proto::ResourceLimit(*from.resource_limit_);
  } else {
    resource_limit_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:apollo.cyber.proto.TransportConf)
}

void TransportConf::SharedCtor() {
  ::memset(&shm_conf_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&resource_limit_) -
      reinterpret_cast<char*>(&shm_conf_)) + sizeof(resource_limit_));
}

TransportConf::~TransportConf() {
  // @@protoc_insertion_point(destructor:apollo.cyber.proto.TransportConf)
  SharedDtor();
}

void TransportConf::SharedDtor() {
  if (this != internal_default_instance()) delete shm_conf_;
  if (this != internal_default_instance()) delete participant_attr_;
  if (this != internal_default_instance()) delete communication_mode_;
  if (this != internal_default_instance()) delete resource_limit_;
}

void TransportConf::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TransportConf::descriptor() {
  ::protobuf_transport_5fconf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_transport_5fconf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TransportConf& TransportConf::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_transport_5fconf_2eproto::scc_info_TransportConf.base);
  return *internal_default_instance();
}


void TransportConf::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.cyber.proto.TransportConf)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(shm_conf_ != NULL);
      shm_conf_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(participant_attr_ != NULL);
      participant_attr_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(communication_mode_ != NULL);
      communication_mode_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(resource_limit_ != NULL);
      resource_limit_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TransportConf::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.cyber.proto.TransportConf)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .apollo.cyber.proto.ShmConf shm_conf = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_shm_conf()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.cyber.proto.RtpsParticipantAttr participant_attr = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_participant_attr()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.cyber.proto.CommunicationMode communication_mode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_communication_mode()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.cyber.proto.ResourceLimit resource_limit = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_resource_limit()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.cyber.proto.TransportConf)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.cyber.proto.TransportConf)
  return false;
#undef DO_
}

void TransportConf::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.cyber.proto.TransportConf)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.cyber.proto.ShmConf shm_conf = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_shm_conf(), output);
  }

  // optional .apollo.cyber.proto.RtpsParticipantAttr participant_attr = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_participant_attr(), output);
  }

  // optional .apollo.cyber.proto.CommunicationMode communication_mode = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_communication_mode(), output);
  }

  // optional .apollo.cyber.proto.ResourceLimit resource_limit = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_resource_limit(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.cyber.proto.TransportConf)
}

::google::protobuf::uint8* TransportConf::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.cyber.proto.TransportConf)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.cyber.proto.ShmConf shm_conf = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_shm_conf(), deterministic, target);
  }

  // optional .apollo.cyber.proto.RtpsParticipantAttr participant_attr = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_participant_attr(), deterministic, target);
  }

  // optional .apollo.cyber.proto.CommunicationMode communication_mode = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_communication_mode(), deterministic, target);
  }

  // optional .apollo.cyber.proto.ResourceLimit resource_limit = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_resource_limit(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.cyber.proto.TransportConf)
  return target;
}

size_t TransportConf::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.cyber.proto.TransportConf)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional .apollo.cyber.proto.ShmConf shm_conf = 1;
    if (has_shm_conf()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *shm_conf_);
    }

    // optional .apollo.cyber.proto.RtpsParticipantAttr participant_attr = 2;
    if (has_participant_attr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *participant_attr_);
    }

    // optional .apollo.cyber.proto.CommunicationMode communication_mode = 3;
    if (has_communication_mode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *communication_mode_);
    }

    // optional .apollo.cyber.proto.ResourceLimit resource_limit = 4;
    if (has_resource_limit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *resource_limit_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TransportConf::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.cyber.proto.TransportConf)
  GOOGLE_DCHECK_NE(&from, this);
  const TransportConf* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransportConf>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.cyber.proto.TransportConf)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.cyber.proto.TransportConf)
    MergeFrom(*source);
  }
}

void TransportConf::MergeFrom(const TransportConf& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.cyber.proto.TransportConf)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_shm_conf()->::apollo::cyber::proto::ShmConf::MergeFrom(from.shm_conf());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_participant_attr()->::apollo::cyber::proto::RtpsParticipantAttr::MergeFrom(from.participant_attr());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_communication_mode()->::apollo::cyber::proto::CommunicationMode::MergeFrom(from.communication_mode());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_resource_limit()->::apollo::cyber::proto::ResourceLimit::MergeFrom(from.resource_limit());
    }
  }
}

void TransportConf::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.cyber.proto.TransportConf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransportConf::CopyFrom(const TransportConf& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.cyber.proto.TransportConf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransportConf::IsInitialized() const {
  return true;
}

void TransportConf::Swap(TransportConf* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransportConf::InternalSwap(TransportConf* other) {
  using std::swap;
  swap(shm_conf_, other->shm_conf_);
  swap(participant_attr_, other->participant_attr_);
  swap(communication_mode_, other->communication_mode_);
  swap(resource_limit_, other->resource_limit_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TransportConf::GetMetadata() const {
  protobuf_transport_5fconf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_transport_5fconf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace cyber
}  // namespace apollo
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::cyber::proto::ShmMulticastLocator* Arena::CreateMaybeMessage< ::apollo::cyber::proto::ShmMulticastLocator >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::cyber::proto::ShmMulticastLocator >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::cyber::proto::ShmConf* Arena::CreateMaybeMessage< ::apollo::cyber::proto::ShmConf >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::cyber::proto::ShmConf >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::cyber::proto::RtpsParticipantAttr* Arena::CreateMaybeMessage< ::apollo::cyber::proto::RtpsParticipantAttr >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::cyber::proto::RtpsParticipantAttr >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::cyber::proto::CommunicationMode* Arena::CreateMaybeMessage< ::apollo::cyber::proto::CommunicationMode >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::cyber::proto::CommunicationMode >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::cyber::proto::ResourceLimit* Arena::CreateMaybeMessage< ::apollo::cyber::proto::ResourceLimit >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::cyber::proto::ResourceLimit >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::cyber::proto::TransportConf* Arena::CreateMaybeMessage< ::apollo::cyber::proto::TransportConf >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::cyber::proto::TransportConf >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
