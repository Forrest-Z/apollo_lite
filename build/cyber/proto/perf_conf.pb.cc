// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: perf_conf.proto

#include "perf_conf.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace apollo {
namespace cyber {
namespace proto {
class PerfConfDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PerfConf>
      _instance;
} _PerfConf_default_instance_;
}  // namespace proto
}  // namespace cyber
}  // namespace apollo
namespace protobuf_perf_5fconf_2eproto {
static void InitDefaultsPerfConf() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::cyber::proto::_PerfConf_default_instance_;
    new (ptr) ::apollo::cyber::proto::PerfConf();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::cyber::proto::PerfConf::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PerfConf =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPerfConf}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_PerfConf.base);
}

::google::protobuf::Metadata file_level_metadata[1];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::cyber::proto::PerfConf, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::cyber::proto::PerfConf, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::cyber::proto::PerfConf, enable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::cyber::proto::PerfConf, type_),
  0,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::apollo::cyber::proto::PerfConf)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::cyber::proto::_PerfConf_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "perf_conf.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017perf_conf.proto\022\022apollo.cyber.proto\"R\n"
      "\010PerfConf\022\025\n\006enable\030\001 \001(\010:\005false\022/\n\004type"
      "\030\002 \001(\0162\034.apollo.cyber.proto.PerfType:\003AL"
      "L*=\n\010PerfType\022\t\n\005SCHED\020\001\022\r\n\tTRANSPORT\020\002\022"
      "\016\n\nDATA_CACHE\020\003\022\007\n\003ALL\020\004"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 184);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "perf_conf.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_perf_5fconf_2eproto
namespace apollo {
namespace cyber {
namespace proto {
const ::google::protobuf::EnumDescriptor* PerfType_descriptor() {
  protobuf_perf_5fconf_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_perf_5fconf_2eproto::file_level_enum_descriptors[0];
}
bool PerfType_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void PerfConf::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PerfConf::kEnableFieldNumber;
const int PerfConf::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PerfConf::PerfConf()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_perf_5fconf_2eproto::scc_info_PerfConf.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.cyber.proto.PerfConf)
}
PerfConf::PerfConf(const PerfConf& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&enable_, &from.enable_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&enable_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:apollo.cyber.proto.PerfConf)
}

void PerfConf::SharedCtor() {
  enable_ = false;
  type_ = 4;
}

PerfConf::~PerfConf() {
  // @@protoc_insertion_point(destructor:apollo.cyber.proto.PerfConf)
  SharedDtor();
}

void PerfConf::SharedDtor() {
}

void PerfConf::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PerfConf::descriptor() {
  ::protobuf_perf_5fconf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_perf_5fconf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PerfConf& PerfConf::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_perf_5fconf_2eproto::scc_info_PerfConf.base);
  return *internal_default_instance();
}


void PerfConf::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.cyber.proto.PerfConf)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    enable_ = false;
    type_ = 4;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PerfConf::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.cyber.proto.PerfConf)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool enable = 1 [default = false];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_enable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.cyber.proto.PerfType type = 2 [default = ALL];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::cyber::proto::PerfType_IsValid(value)) {
            set_type(static_cast< ::apollo::cyber::proto::PerfType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.cyber.proto.PerfConf)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.cyber.proto.PerfConf)
  return false;
#undef DO_
}

void PerfConf::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.cyber.proto.PerfConf)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool enable = 1 [default = false];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->enable(), output);
  }

  // optional .apollo.cyber.proto.PerfType type = 2 [default = ALL];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.cyber.proto.PerfConf)
}

::google::protobuf::uint8* PerfConf::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.cyber.proto.PerfConf)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool enable = 1 [default = false];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->enable(), target);
  }

  // optional .apollo.cyber.proto.PerfType type = 2 [default = ALL];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.cyber.proto.PerfConf)
  return target;
}

size_t PerfConf::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.cyber.proto.PerfConf)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bool enable = 1 [default = false];
    if (has_enable()) {
      total_size += 1 + 1;
    }

    // optional .apollo.cyber.proto.PerfType type = 2 [default = ALL];
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PerfConf::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.cyber.proto.PerfConf)
  GOOGLE_DCHECK_NE(&from, this);
  const PerfConf* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PerfConf>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.cyber.proto.PerfConf)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.cyber.proto.PerfConf)
    MergeFrom(*source);
  }
}

void PerfConf::MergeFrom(const PerfConf& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.cyber.proto.PerfConf)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      enable_ = from.enable_;
    }
    if (cached_has_bits & 0x00000002u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PerfConf::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.cyber.proto.PerfConf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PerfConf::CopyFrom(const PerfConf& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.cyber.proto.PerfConf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PerfConf::IsInitialized() const {
  return true;
}

void PerfConf::Swap(PerfConf* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PerfConf::InternalSwap(PerfConf* other) {
  using std::swap;
  swap(enable_, other->enable_);
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PerfConf::GetMetadata() const {
  protobuf_perf_5fconf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_perf_5fconf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace cyber
}  // namespace apollo
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::cyber::proto::PerfConf* Arena::CreateMaybeMessage< ::apollo::cyber::proto::PerfConf >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::cyber::proto::PerfConf >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
