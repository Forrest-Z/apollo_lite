// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: choreography_conf.proto

#include "choreography_conf.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_choreography_5fconf_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_choreography_5fconf_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ChoreographyTask;
}  // namespace protobuf_choreography_5fconf_2eproto
namespace apollo {
namespace cyber {
namespace proto {
class ChoreographyTaskDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChoreographyTask>
      _instance;
} _ChoreographyTask_default_instance_;
class ChoreographyConfDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChoreographyConf>
      _instance;
} _ChoreographyConf_default_instance_;
}  // namespace proto
}  // namespace cyber
}  // namespace apollo
namespace protobuf_choreography_5fconf_2eproto {
static void InitDefaultsChoreographyTask() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::cyber::proto::_ChoreographyTask_default_instance_;
    new (ptr) ::apollo::cyber::proto::ChoreographyTask();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::cyber::proto::ChoreographyTask::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ChoreographyTask =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsChoreographyTask}, {}};

static void InitDefaultsChoreographyConf() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::cyber::proto::_ChoreographyConf_default_instance_;
    new (ptr) ::apollo::cyber::proto::ChoreographyConf();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::cyber::proto::ChoreographyConf::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ChoreographyConf =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsChoreographyConf}, {
      &protobuf_choreography_5fconf_2eproto::scc_info_ChoreographyTask.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ChoreographyTask.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ChoreographyConf.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::cyber::proto::ChoreographyTask, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::cyber::proto::ChoreographyTask, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::cyber::proto::ChoreographyTask, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::cyber::proto::ChoreographyTask, processor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::cyber::proto::ChoreographyTask, prio_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::cyber::proto::ChoreographyConf, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::cyber::proto::ChoreographyConf, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::cyber::proto::ChoreographyConf, choreography_processor_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::cyber::proto::ChoreographyConf, choreography_affinity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::cyber::proto::ChoreographyConf, choreography_processor_policy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::cyber::proto::ChoreographyConf, choreography_processor_prio_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::cyber::proto::ChoreographyConf, choreography_cpuset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::cyber::proto::ChoreographyConf, pool_processor_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::cyber::proto::ChoreographyConf, pool_affinity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::cyber::proto::ChoreographyConf, pool_processor_policy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::cyber::proto::ChoreographyConf, pool_processor_prio_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::cyber::proto::ChoreographyConf, pool_cpuset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::cyber::proto::ChoreographyConf, tasks_),
  6,
  0,
  1,
  7,
  2,
  8,
  3,
  4,
  9,
  5,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(::apollo::cyber::proto::ChoreographyTask)},
  { 11, 27, sizeof(::apollo::cyber::proto::ChoreographyConf)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::cyber::proto::_ChoreographyTask_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::cyber::proto::_ChoreographyConf_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "choreography_conf.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\027choreography_conf.proto\022\022apollo.cyber."
      "proto\"D\n\020ChoreographyTask\022\014\n\004name\030\001 \001(\t\022"
      "\021\n\tprocessor\030\002 \001(\005\022\017\n\004prio\030\003 \001(\r:\0011\"\367\002\n\020"
      "ChoreographyConf\022\"\n\032choreography_process"
      "or_num\030\001 \001(\r\022\035\n\025choreography_affinity\030\002 "
      "\001(\t\022%\n\035choreography_processor_policy\030\003 \001"
      "(\t\022#\n\033choreography_processor_prio\030\004 \001(\005\022"
      "\033\n\023choreography_cpuset\030\005 \001(\t\022\032\n\022pool_pro"
      "cessor_num\030\006 \001(\r\022\025\n\rpool_affinity\030\007 \001(\t\022"
      "\035\n\025pool_processor_policy\030\010 \001(\t\022\033\n\023pool_p"
      "rocessor_prio\030\t \001(\005\022\023\n\013pool_cpuset\030\n \001(\t"
      "\0223\n\005tasks\030\013 \003(\0132$.apollo.cyber.proto.Cho"
      "reographyTask"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 493);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "choreography_conf.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_choreography_5fconf_2eproto
namespace apollo {
namespace cyber {
namespace proto {

// ===================================================================

void ChoreographyTask::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChoreographyTask::kNameFieldNumber;
const int ChoreographyTask::kProcessorFieldNumber;
const int ChoreographyTask::kPrioFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChoreographyTask::ChoreographyTask()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_choreography_5fconf_2eproto::scc_info_ChoreographyTask.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.cyber.proto.ChoreographyTask)
}
ChoreographyTask::ChoreographyTask(const ChoreographyTask& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&processor_, &from.processor_,
    static_cast<size_t>(reinterpret_cast<char*>(&prio_) -
    reinterpret_cast<char*>(&processor_)) + sizeof(prio_));
  // @@protoc_insertion_point(copy_constructor:apollo.cyber.proto.ChoreographyTask)
}

void ChoreographyTask::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  processor_ = 0;
  prio_ = 1u;
}

ChoreographyTask::~ChoreographyTask() {
  // @@protoc_insertion_point(destructor:apollo.cyber.proto.ChoreographyTask)
  SharedDtor();
}

void ChoreographyTask::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ChoreographyTask::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ChoreographyTask::descriptor() {
  ::protobuf_choreography_5fconf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_choreography_5fconf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChoreographyTask& ChoreographyTask::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_choreography_5fconf_2eproto::scc_info_ChoreographyTask.base);
  return *internal_default_instance();
}


void ChoreographyTask::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.cyber.proto.ChoreographyTask)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    processor_ = 0;
    prio_ = 1u;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ChoreographyTask::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.cyber.proto.ChoreographyTask)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.cyber.proto.ChoreographyTask.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 processor = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_processor();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &processor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 prio = 3 [default = 1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_prio();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &prio_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.cyber.proto.ChoreographyTask)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.cyber.proto.ChoreographyTask)
  return false;
#undef DO_
}

void ChoreographyTask::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.cyber.proto.ChoreographyTask)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.cyber.proto.ChoreographyTask.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional int32 processor = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->processor(), output);
  }

  // optional uint32 prio = 3 [default = 1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->prio(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.cyber.proto.ChoreographyTask)
}

::google::protobuf::uint8* ChoreographyTask::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.cyber.proto.ChoreographyTask)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.cyber.proto.ChoreographyTask.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional int32 processor = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->processor(), target);
  }

  // optional uint32 prio = 3 [default = 1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->prio(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.cyber.proto.ChoreographyTask)
  return target;
}

size_t ChoreographyTask::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.cyber.proto.ChoreographyTask)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional int32 processor = 2;
    if (has_processor()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->processor());
    }

    // optional uint32 prio = 3 [default = 1];
    if (has_prio()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->prio());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChoreographyTask::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.cyber.proto.ChoreographyTask)
  GOOGLE_DCHECK_NE(&from, this);
  const ChoreographyTask* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChoreographyTask>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.cyber.proto.ChoreographyTask)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.cyber.proto.ChoreographyTask)
    MergeFrom(*source);
  }
}

void ChoreographyTask::MergeFrom(const ChoreographyTask& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.cyber.proto.ChoreographyTask)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      processor_ = from.processor_;
    }
    if (cached_has_bits & 0x00000004u) {
      prio_ = from.prio_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ChoreographyTask::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.cyber.proto.ChoreographyTask)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChoreographyTask::CopyFrom(const ChoreographyTask& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.cyber.proto.ChoreographyTask)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChoreographyTask::IsInitialized() const {
  return true;
}

void ChoreographyTask::Swap(ChoreographyTask* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChoreographyTask::InternalSwap(ChoreographyTask* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(processor_, other->processor_);
  swap(prio_, other->prio_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ChoreographyTask::GetMetadata() const {
  protobuf_choreography_5fconf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_choreography_5fconf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ChoreographyConf::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChoreographyConf::kChoreographyProcessorNumFieldNumber;
const int ChoreographyConf::kChoreographyAffinityFieldNumber;
const int ChoreographyConf::kChoreographyProcessorPolicyFieldNumber;
const int ChoreographyConf::kChoreographyProcessorPrioFieldNumber;
const int ChoreographyConf::kChoreographyCpusetFieldNumber;
const int ChoreographyConf::kPoolProcessorNumFieldNumber;
const int ChoreographyConf::kPoolAffinityFieldNumber;
const int ChoreographyConf::kPoolProcessorPolicyFieldNumber;
const int ChoreographyConf::kPoolProcessorPrioFieldNumber;
const int ChoreographyConf::kPoolCpusetFieldNumber;
const int ChoreographyConf::kTasksFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChoreographyConf::ChoreographyConf()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_choreography_5fconf_2eproto::scc_info_ChoreographyConf.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.cyber.proto.ChoreographyConf)
}
ChoreographyConf::ChoreographyConf(const ChoreographyConf& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      tasks_(from.tasks_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  choreography_affinity_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_choreography_affinity()) {
    choreography_affinity_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.choreography_affinity_);
  }
  choreography_processor_policy_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_choreography_processor_policy()) {
    choreography_processor_policy_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.choreography_processor_policy_);
  }
  choreography_cpuset_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_choreography_cpuset()) {
    choreography_cpuset_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.choreography_cpuset_);
  }
  pool_affinity_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pool_affinity()) {
    pool_affinity_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pool_affinity_);
  }
  pool_processor_policy_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pool_processor_policy()) {
    pool_processor_policy_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pool_processor_policy_);
  }
  pool_cpuset_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pool_cpuset()) {
    pool_cpuset_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pool_cpuset_);
  }
  ::memcpy(&choreography_processor_num_, &from.choreography_processor_num_,
    static_cast<size_t>(reinterpret_cast<char*>(&pool_processor_prio_) -
    reinterpret_cast<char*>(&choreography_processor_num_)) + sizeof(pool_processor_prio_));
  // @@protoc_insertion_point(copy_constructor:apollo.cyber.proto.ChoreographyConf)
}

void ChoreographyConf::SharedCtor() {
  choreography_affinity_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  choreography_processor_policy_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  choreography_cpuset_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pool_affinity_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pool_processor_policy_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pool_cpuset_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&choreography_processor_num_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pool_processor_prio_) -
      reinterpret_cast<char*>(&choreography_processor_num_)) + sizeof(pool_processor_prio_));
}

ChoreographyConf::~ChoreographyConf() {
  // @@protoc_insertion_point(destructor:apollo.cyber.proto.ChoreographyConf)
  SharedDtor();
}

void ChoreographyConf::SharedDtor() {
  choreography_affinity_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  choreography_processor_policy_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  choreography_cpuset_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pool_affinity_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pool_processor_policy_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pool_cpuset_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ChoreographyConf::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ChoreographyConf::descriptor() {
  ::protobuf_choreography_5fconf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_choreography_5fconf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChoreographyConf& ChoreographyConf::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_choreography_5fconf_2eproto::scc_info_ChoreographyConf.base);
  return *internal_default_instance();
}


void ChoreographyConf::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.cyber.proto.ChoreographyConf)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tasks_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      choreography_affinity_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      choreography_processor_policy_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      choreography_cpuset_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      pool_affinity_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      pool_processor_policy_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      pool_cpuset_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 192u) {
    ::memset(&choreography_processor_num_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&choreography_processor_prio_) -
        reinterpret_cast<char*>(&choreography_processor_num_)) + sizeof(choreography_processor_prio_));
  }
  if (cached_has_bits & 768u) {
    ::memset(&pool_processor_num_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pool_processor_prio_) -
        reinterpret_cast<char*>(&pool_processor_num_)) + sizeof(pool_processor_prio_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ChoreographyConf::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.cyber.proto.ChoreographyConf)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 choreography_processor_num = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_choreography_processor_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &choreography_processor_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string choreography_affinity = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_choreography_affinity()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->choreography_affinity().data(), static_cast<int>(this->choreography_affinity().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.cyber.proto.ChoreographyConf.choreography_affinity");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string choreography_processor_policy = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_choreography_processor_policy()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->choreography_processor_policy().data(), static_cast<int>(this->choreography_processor_policy().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.cyber.proto.ChoreographyConf.choreography_processor_policy");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 choreography_processor_prio = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_choreography_processor_prio();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &choreography_processor_prio_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string choreography_cpuset = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_choreography_cpuset()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->choreography_cpuset().data(), static_cast<int>(this->choreography_cpuset().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.cyber.proto.ChoreographyConf.choreography_cpuset");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pool_processor_num = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_pool_processor_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pool_processor_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string pool_affinity = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pool_affinity()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->pool_affinity().data(), static_cast<int>(this->pool_affinity().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.cyber.proto.ChoreographyConf.pool_affinity");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string pool_processor_policy = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pool_processor_policy()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->pool_processor_policy().data(), static_cast<int>(this->pool_processor_policy().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.cyber.proto.ChoreographyConf.pool_processor_policy");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 pool_processor_prio = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_pool_processor_prio();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pool_processor_prio_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string pool_cpuset = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pool_cpuset()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->pool_cpuset().data(), static_cast<int>(this->pool_cpuset().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.cyber.proto.ChoreographyConf.pool_cpuset");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .apollo.cyber.proto.ChoreographyTask tasks = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_tasks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.cyber.proto.ChoreographyConf)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.cyber.proto.ChoreographyConf)
  return false;
#undef DO_
}

void ChoreographyConf::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.cyber.proto.ChoreographyConf)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 choreography_processor_num = 1;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->choreography_processor_num(), output);
  }

  // optional string choreography_affinity = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->choreography_affinity().data(), static_cast<int>(this->choreography_affinity().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.cyber.proto.ChoreographyConf.choreography_affinity");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->choreography_affinity(), output);
  }

  // optional string choreography_processor_policy = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->choreography_processor_policy().data(), static_cast<int>(this->choreography_processor_policy().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.cyber.proto.ChoreographyConf.choreography_processor_policy");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->choreography_processor_policy(), output);
  }

  // optional int32 choreography_processor_prio = 4;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->choreography_processor_prio(), output);
  }

  // optional string choreography_cpuset = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->choreography_cpuset().data(), static_cast<int>(this->choreography_cpuset().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.cyber.proto.ChoreographyConf.choreography_cpuset");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->choreography_cpuset(), output);
  }

  // optional uint32 pool_processor_num = 6;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->pool_processor_num(), output);
  }

  // optional string pool_affinity = 7;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pool_affinity().data(), static_cast<int>(this->pool_affinity().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.cyber.proto.ChoreographyConf.pool_affinity");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->pool_affinity(), output);
  }

  // optional string pool_processor_policy = 8;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pool_processor_policy().data(), static_cast<int>(this->pool_processor_policy().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.cyber.proto.ChoreographyConf.pool_processor_policy");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->pool_processor_policy(), output);
  }

  // optional int32 pool_processor_prio = 9;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->pool_processor_prio(), output);
  }

  // optional string pool_cpuset = 10;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pool_cpuset().data(), static_cast<int>(this->pool_cpuset().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.cyber.proto.ChoreographyConf.pool_cpuset");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->pool_cpuset(), output);
  }

  // repeated .apollo.cyber.proto.ChoreographyTask tasks = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tasks_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11,
      this->tasks(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.cyber.proto.ChoreographyConf)
}

::google::protobuf::uint8* ChoreographyConf::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.cyber.proto.ChoreographyConf)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 choreography_processor_num = 1;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->choreography_processor_num(), target);
  }

  // optional string choreography_affinity = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->choreography_affinity().data(), static_cast<int>(this->choreography_affinity().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.cyber.proto.ChoreographyConf.choreography_affinity");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->choreography_affinity(), target);
  }

  // optional string choreography_processor_policy = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->choreography_processor_policy().data(), static_cast<int>(this->choreography_processor_policy().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.cyber.proto.ChoreographyConf.choreography_processor_policy");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->choreography_processor_policy(), target);
  }

  // optional int32 choreography_processor_prio = 4;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->choreography_processor_prio(), target);
  }

  // optional string choreography_cpuset = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->choreography_cpuset().data(), static_cast<int>(this->choreography_cpuset().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.cyber.proto.ChoreographyConf.choreography_cpuset");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->choreography_cpuset(), target);
  }

  // optional uint32 pool_processor_num = 6;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->pool_processor_num(), target);
  }

  // optional string pool_affinity = 7;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pool_affinity().data(), static_cast<int>(this->pool_affinity().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.cyber.proto.ChoreographyConf.pool_affinity");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->pool_affinity(), target);
  }

  // optional string pool_processor_policy = 8;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pool_processor_policy().data(), static_cast<int>(this->pool_processor_policy().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.cyber.proto.ChoreographyConf.pool_processor_policy");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->pool_processor_policy(), target);
  }

  // optional int32 pool_processor_prio = 9;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->pool_processor_prio(), target);
  }

  // optional string pool_cpuset = 10;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pool_cpuset().data(), static_cast<int>(this->pool_cpuset().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.cyber.proto.ChoreographyConf.pool_cpuset");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->pool_cpuset(), target);
  }

  // repeated .apollo.cyber.proto.ChoreographyTask tasks = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tasks_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->tasks(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.cyber.proto.ChoreographyConf)
  return target;
}

size_t ChoreographyConf::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.cyber.proto.ChoreographyConf)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .apollo.cyber.proto.ChoreographyTask tasks = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->tasks_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->tasks(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string choreography_affinity = 2;
    if (has_choreography_affinity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->choreography_affinity());
    }

    // optional string choreography_processor_policy = 3;
    if (has_choreography_processor_policy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->choreography_processor_policy());
    }

    // optional string choreography_cpuset = 5;
    if (has_choreography_cpuset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->choreography_cpuset());
    }

    // optional string pool_affinity = 7;
    if (has_pool_affinity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->pool_affinity());
    }

    // optional string pool_processor_policy = 8;
    if (has_pool_processor_policy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->pool_processor_policy());
    }

    // optional string pool_cpuset = 10;
    if (has_pool_cpuset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->pool_cpuset());
    }

    // optional uint32 choreography_processor_num = 1;
    if (has_choreography_processor_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->choreography_processor_num());
    }

    // optional int32 choreography_processor_prio = 4;
    if (has_choreography_processor_prio()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->choreography_processor_prio());
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional uint32 pool_processor_num = 6;
    if (has_pool_processor_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pool_processor_num());
    }

    // optional int32 pool_processor_prio = 9;
    if (has_pool_processor_prio()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pool_processor_prio());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChoreographyConf::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.cyber.proto.ChoreographyConf)
  GOOGLE_DCHECK_NE(&from, this);
  const ChoreographyConf* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChoreographyConf>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.cyber.proto.ChoreographyConf)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.cyber.proto.ChoreographyConf)
    MergeFrom(*source);
  }
}

void ChoreographyConf::MergeFrom(const ChoreographyConf& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.cyber.proto.ChoreographyConf)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tasks_.MergeFrom(from.tasks_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_choreography_affinity();
      choreography_affinity_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.choreography_affinity_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_choreography_processor_policy();
      choreography_processor_policy_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.choreography_processor_policy_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_choreography_cpuset();
      choreography_cpuset_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.choreography_cpuset_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_pool_affinity();
      pool_affinity_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pool_affinity_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_pool_processor_policy();
      pool_processor_policy_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pool_processor_policy_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_pool_cpuset();
      pool_cpuset_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pool_cpuset_);
    }
    if (cached_has_bits & 0x00000040u) {
      choreography_processor_num_ = from.choreography_processor_num_;
    }
    if (cached_has_bits & 0x00000080u) {
      choreography_processor_prio_ = from.choreography_processor_prio_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 768u) {
    if (cached_has_bits & 0x00000100u) {
      pool_processor_num_ = from.pool_processor_num_;
    }
    if (cached_has_bits & 0x00000200u) {
      pool_processor_prio_ = from.pool_processor_prio_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ChoreographyConf::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.cyber.proto.ChoreographyConf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChoreographyConf::CopyFrom(const ChoreographyConf& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.cyber.proto.ChoreographyConf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChoreographyConf::IsInitialized() const {
  return true;
}

void ChoreographyConf::Swap(ChoreographyConf* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChoreographyConf::InternalSwap(ChoreographyConf* other) {
  using std::swap;
  CastToBase(&tasks_)->InternalSwap(CastToBase(&other->tasks_));
  choreography_affinity_.Swap(&other->choreography_affinity_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  choreography_processor_policy_.Swap(&other->choreography_processor_policy_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  choreography_cpuset_.Swap(&other->choreography_cpuset_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pool_affinity_.Swap(&other->pool_affinity_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pool_processor_policy_.Swap(&other->pool_processor_policy_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pool_cpuset_.Swap(&other->pool_cpuset_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(choreography_processor_num_, other->choreography_processor_num_);
  swap(choreography_processor_prio_, other->choreography_processor_prio_);
  swap(pool_processor_num_, other->pool_processor_num_);
  swap(pool_processor_prio_, other->pool_processor_prio_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ChoreographyConf::GetMetadata() const {
  protobuf_choreography_5fconf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_choreography_5fconf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace cyber
}  // namespace apollo
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::cyber::proto::ChoreographyTask* Arena::CreateMaybeMessage< ::apollo::cyber::proto::ChoreographyTask >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::cyber::proto::ChoreographyTask >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::cyber::proto::ChoreographyConf* Arena::CreateMaybeMessage< ::apollo::cyber::proto::ChoreographyConf >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::cyber::proto::ChoreographyConf >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
