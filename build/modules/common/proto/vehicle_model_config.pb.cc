// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: vehicle_model_config.proto

#include "vehicle_model_config.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_vehicle_5fmodel_5fconfig_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_vehicle_5fmodel_5fconfig_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ComCenteredDynamicBicycleModelConfig;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_vehicle_5fmodel_5fconfig_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MlpModelConfig;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_vehicle_5fmodel_5fconfig_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RearCenteredKinematicBicycleModelConfig;
}  // namespace protobuf_vehicle_5fmodel_5fconfig_2eproto
namespace apollo {
namespace common {
class VehicleModelConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VehicleModelConfig>
      _instance;
} _VehicleModelConfig_default_instance_;
class RearCenteredKinematicBicycleModelConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RearCenteredKinematicBicycleModelConfig>
      _instance;
} _RearCenteredKinematicBicycleModelConfig_default_instance_;
class ComCenteredDynamicBicycleModelConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ComCenteredDynamicBicycleModelConfig>
      _instance;
} _ComCenteredDynamicBicycleModelConfig_default_instance_;
class MlpModelConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MlpModelConfig>
      _instance;
} _MlpModelConfig_default_instance_;
}  // namespace common
}  // namespace apollo
namespace protobuf_vehicle_5fmodel_5fconfig_2eproto {
static void InitDefaultsVehicleModelConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::common::_VehicleModelConfig_default_instance_;
    new (ptr) ::apollo::common::VehicleModelConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::common::VehicleModelConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_VehicleModelConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsVehicleModelConfig}, {
      &protobuf_vehicle_5fmodel_5fconfig_2eproto::scc_info_RearCenteredKinematicBicycleModelConfig.base,
      &protobuf_vehicle_5fmodel_5fconfig_2eproto::scc_info_ComCenteredDynamicBicycleModelConfig.base,
      &protobuf_vehicle_5fmodel_5fconfig_2eproto::scc_info_MlpModelConfig.base,}};

static void InitDefaultsRearCenteredKinematicBicycleModelConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::common::_RearCenteredKinematicBicycleModelConfig_default_instance_;
    new (ptr) ::apollo::common::RearCenteredKinematicBicycleModelConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::common::RearCenteredKinematicBicycleModelConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RearCenteredKinematicBicycleModelConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRearCenteredKinematicBicycleModelConfig}, {}};

static void InitDefaultsComCenteredDynamicBicycleModelConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::common::_ComCenteredDynamicBicycleModelConfig_default_instance_;
    new (ptr) ::apollo::common::ComCenteredDynamicBicycleModelConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::common::ComCenteredDynamicBicycleModelConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ComCenteredDynamicBicycleModelConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsComCenteredDynamicBicycleModelConfig}, {}};

static void InitDefaultsMlpModelConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::common::_MlpModelConfig_default_instance_;
    new (ptr) ::apollo::common::MlpModelConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::common::MlpModelConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MlpModelConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMlpModelConfig}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_VehicleModelConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RearCenteredKinematicBicycleModelConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ComCenteredDynamicBicycleModelConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MlpModelConfig.base);
}

::google::protobuf::Metadata file_level_metadata[4];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::common::VehicleModelConfig, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::common::VehicleModelConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::common::VehicleModelConfig, model_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::common::VehicleModelConfig, rc_kinematic_bicycle_model_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::common::VehicleModelConfig, comc_dynamic_bicycle_model_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::common::VehicleModelConfig, mlp_model_),
  3,
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::common::RearCenteredKinematicBicycleModelConfig, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::common::RearCenteredKinematicBicycleModelConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::common::RearCenteredKinematicBicycleModelConfig, dt_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::common::ComCenteredDynamicBicycleModelConfig, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::common::ComCenteredDynamicBicycleModelConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::common::ComCenteredDynamicBicycleModelConfig, dt_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::common::MlpModelConfig, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::common::MlpModelConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::common::MlpModelConfig, dt_),
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, sizeof(::apollo::common::VehicleModelConfig)},
  { 13, 19, sizeof(::apollo::common::RearCenteredKinematicBicycleModelConfig)},
  { 20, 26, sizeof(::apollo::common::ComCenteredDynamicBicycleModelConfig)},
  { 27, 33, sizeof(::apollo::common::MlpModelConfig)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::common::_VehicleModelConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::common::_RearCenteredKinematicBicycleModelConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::common::_ComCenteredDynamicBicycleModelConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::common::_MlpModelConfig_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "vehicle_model_config.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\032vehicle_model_config.proto\022\rapollo.com"
      "mon\"\253\003\n\022VehicleModelConfig\022\?\n\nmodel_type"
      "\030\001 \001(\0162+.apollo.common.VehicleModelConfi"
      "g.ModelType\022Z\n\032rc_kinematic_bicycle_mode"
      "l\030\002 \001(\01326.apollo.common.RearCenteredKine"
      "maticBicycleModelConfig\022W\n\032comc_dynamic_"
      "bicycle_model\030\003 \001(\01323.apollo.common.ComC"
      "enteredDynamicBicycleModelConfig\0220\n\tmlp_"
      "model\030\004 \001(\0132\035.apollo.common.MlpModelConf"
      "ig\"m\n\tModelType\022)\n%REAR_CENTERED_KINEMAT"
      "IC_BICYCLE_MODEL\020\000\022&\n\"COM_CENTERED_DYNAM"
      "IC_BICYCLE_MODEL\020\001\022\r\n\tMLP_MODEL\020\002\"5\n\'Rea"
      "rCenteredKinematicBicycleModelConfig\022\n\n\002"
      "dt\030\001 \001(\001\"2\n$ComCenteredDynamicBicycleMod"
      "elConfig\022\n\n\002dt\030\001 \001(\001\"\034\n\016MlpModelConfig\022\n"
      "\n\002dt\030\001 \001(\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 610);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "vehicle_model_config.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_vehicle_5fmodel_5fconfig_2eproto
namespace apollo {
namespace common {
const ::google::protobuf::EnumDescriptor* VehicleModelConfig_ModelType_descriptor() {
  protobuf_vehicle_5fmodel_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_vehicle_5fmodel_5fconfig_2eproto::file_level_enum_descriptors[0];
}
bool VehicleModelConfig_ModelType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const VehicleModelConfig_ModelType VehicleModelConfig::REAR_CENTERED_KINEMATIC_BICYCLE_MODEL;
const VehicleModelConfig_ModelType VehicleModelConfig::COM_CENTERED_DYNAMIC_BICYCLE_MODEL;
const VehicleModelConfig_ModelType VehicleModelConfig::MLP_MODEL;
const VehicleModelConfig_ModelType VehicleModelConfig::ModelType_MIN;
const VehicleModelConfig_ModelType VehicleModelConfig::ModelType_MAX;
const int VehicleModelConfig::ModelType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void VehicleModelConfig::InitAsDefaultInstance() {
  ::apollo::common::_VehicleModelConfig_default_instance_._instance.get_mutable()->rc_kinematic_bicycle_model_ = const_cast< ::apollo::common::RearCenteredKinematicBicycleModelConfig*>(
      ::apollo::common::RearCenteredKinematicBicycleModelConfig::internal_default_instance());
  ::apollo::common::_VehicleModelConfig_default_instance_._instance.get_mutable()->comc_dynamic_bicycle_model_ = const_cast< ::apollo::common::ComCenteredDynamicBicycleModelConfig*>(
      ::apollo::common::ComCenteredDynamicBicycleModelConfig::internal_default_instance());
  ::apollo::common::_VehicleModelConfig_default_instance_._instance.get_mutable()->mlp_model_ = const_cast< ::apollo::common::MlpModelConfig*>(
      ::apollo::common::MlpModelConfig::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VehicleModelConfig::kModelTypeFieldNumber;
const int VehicleModelConfig::kRcKinematicBicycleModelFieldNumber;
const int VehicleModelConfig::kComcDynamicBicycleModelFieldNumber;
const int VehicleModelConfig::kMlpModelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VehicleModelConfig::VehicleModelConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vehicle_5fmodel_5fconfig_2eproto::scc_info_VehicleModelConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.common.VehicleModelConfig)
}
VehicleModelConfig::VehicleModelConfig(const VehicleModelConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_rc_kinematic_bicycle_model()) {
    rc_kinematic_bicycle_model_ = new ::apollo::common::RearCenteredKinematicBicycleModelConfig(*from.rc_kinematic_bicycle_model_);
  } else {
    rc_kinematic_bicycle_model_ = NULL;
  }
  if (from.has_comc_dynamic_bicycle_model()) {
    comc_dynamic_bicycle_model_ = new ::apollo::common::ComCenteredDynamicBicycleModelConfig(*from.comc_dynamic_bicycle_model_);
  } else {
    comc_dynamic_bicycle_model_ = NULL;
  }
  if (from.has_mlp_model()) {
    mlp_model_ = new ::apollo::common::MlpModelConfig(*from.mlp_model_);
  } else {
    mlp_model_ = NULL;
  }
  model_type_ = from.model_type_;
  // @@protoc_insertion_point(copy_constructor:apollo.common.VehicleModelConfig)
}

void VehicleModelConfig::SharedCtor() {
  ::memset(&rc_kinematic_bicycle_model_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&model_type_) -
      reinterpret_cast<char*>(&rc_kinematic_bicycle_model_)) + sizeof(model_type_));
}

VehicleModelConfig::~VehicleModelConfig() {
  // @@protoc_insertion_point(destructor:apollo.common.VehicleModelConfig)
  SharedDtor();
}

void VehicleModelConfig::SharedDtor() {
  if (this != internal_default_instance()) delete rc_kinematic_bicycle_model_;
  if (this != internal_default_instance()) delete comc_dynamic_bicycle_model_;
  if (this != internal_default_instance()) delete mlp_model_;
}

void VehicleModelConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VehicleModelConfig::descriptor() {
  ::protobuf_vehicle_5fmodel_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vehicle_5fmodel_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VehicleModelConfig& VehicleModelConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vehicle_5fmodel_5fconfig_2eproto::scc_info_VehicleModelConfig.base);
  return *internal_default_instance();
}


void VehicleModelConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.common.VehicleModelConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(rc_kinematic_bicycle_model_ != NULL);
      rc_kinematic_bicycle_model_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(comc_dynamic_bicycle_model_ != NULL);
      comc_dynamic_bicycle_model_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(mlp_model_ != NULL);
      mlp_model_->Clear();
    }
  }
  model_type_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VehicleModelConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.common.VehicleModelConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .apollo.common.VehicleModelConfig.ModelType model_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::common::VehicleModelConfig_ModelType_IsValid(value)) {
            set_model_type(static_cast< ::apollo::common::VehicleModelConfig_ModelType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.common.RearCenteredKinematicBicycleModelConfig rc_kinematic_bicycle_model = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rc_kinematic_bicycle_model()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.common.ComCenteredDynamicBicycleModelConfig comc_dynamic_bicycle_model = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_comc_dynamic_bicycle_model()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.common.MlpModelConfig mlp_model = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mlp_model()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.common.VehicleModelConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.common.VehicleModelConfig)
  return false;
#undef DO_
}

void VehicleModelConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.common.VehicleModelConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.common.VehicleModelConfig.ModelType model_type = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->model_type(), output);
  }

  // optional .apollo.common.RearCenteredKinematicBicycleModelConfig rc_kinematic_bicycle_model = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_rc_kinematic_bicycle_model(), output);
  }

  // optional .apollo.common.ComCenteredDynamicBicycleModelConfig comc_dynamic_bicycle_model = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_comc_dynamic_bicycle_model(), output);
  }

  // optional .apollo.common.MlpModelConfig mlp_model = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_mlp_model(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.common.VehicleModelConfig)
}

::google::protobuf::uint8* VehicleModelConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.common.VehicleModelConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.common.VehicleModelConfig.ModelType model_type = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->model_type(), target);
  }

  // optional .apollo.common.RearCenteredKinematicBicycleModelConfig rc_kinematic_bicycle_model = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_rc_kinematic_bicycle_model(), deterministic, target);
  }

  // optional .apollo.common.ComCenteredDynamicBicycleModelConfig comc_dynamic_bicycle_model = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_comc_dynamic_bicycle_model(), deterministic, target);
  }

  // optional .apollo.common.MlpModelConfig mlp_model = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_mlp_model(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.common.VehicleModelConfig)
  return target;
}

size_t VehicleModelConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.common.VehicleModelConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional .apollo.common.RearCenteredKinematicBicycleModelConfig rc_kinematic_bicycle_model = 2;
    if (has_rc_kinematic_bicycle_model()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *rc_kinematic_bicycle_model_);
    }

    // optional .apollo.common.ComCenteredDynamicBicycleModelConfig comc_dynamic_bicycle_model = 3;
    if (has_comc_dynamic_bicycle_model()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *comc_dynamic_bicycle_model_);
    }

    // optional .apollo.common.MlpModelConfig mlp_model = 4;
    if (has_mlp_model()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *mlp_model_);
    }

    // optional .apollo.common.VehicleModelConfig.ModelType model_type = 1;
    if (has_model_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->model_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VehicleModelConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.common.VehicleModelConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const VehicleModelConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VehicleModelConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.common.VehicleModelConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.common.VehicleModelConfig)
    MergeFrom(*source);
  }
}

void VehicleModelConfig::MergeFrom(const VehicleModelConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.common.VehicleModelConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_rc_kinematic_bicycle_model()->::apollo::common::RearCenteredKinematicBicycleModelConfig::MergeFrom(from.rc_kinematic_bicycle_model());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_comc_dynamic_bicycle_model()->::apollo::common::ComCenteredDynamicBicycleModelConfig::MergeFrom(from.comc_dynamic_bicycle_model());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_mlp_model()->::apollo::common::MlpModelConfig::MergeFrom(from.mlp_model());
    }
    if (cached_has_bits & 0x00000008u) {
      model_type_ = from.model_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void VehicleModelConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.common.VehicleModelConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VehicleModelConfig::CopyFrom(const VehicleModelConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.common.VehicleModelConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VehicleModelConfig::IsInitialized() const {
  return true;
}

void VehicleModelConfig::Swap(VehicleModelConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VehicleModelConfig::InternalSwap(VehicleModelConfig* other) {
  using std::swap;
  swap(rc_kinematic_bicycle_model_, other->rc_kinematic_bicycle_model_);
  swap(comc_dynamic_bicycle_model_, other->comc_dynamic_bicycle_model_);
  swap(mlp_model_, other->mlp_model_);
  swap(model_type_, other->model_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VehicleModelConfig::GetMetadata() const {
  protobuf_vehicle_5fmodel_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vehicle_5fmodel_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RearCenteredKinematicBicycleModelConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RearCenteredKinematicBicycleModelConfig::kDtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RearCenteredKinematicBicycleModelConfig::RearCenteredKinematicBicycleModelConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vehicle_5fmodel_5fconfig_2eproto::scc_info_RearCenteredKinematicBicycleModelConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.common.RearCenteredKinematicBicycleModelConfig)
}
RearCenteredKinematicBicycleModelConfig::RearCenteredKinematicBicycleModelConfig(const RearCenteredKinematicBicycleModelConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dt_ = from.dt_;
  // @@protoc_insertion_point(copy_constructor:apollo.common.RearCenteredKinematicBicycleModelConfig)
}

void RearCenteredKinematicBicycleModelConfig::SharedCtor() {
  dt_ = 0;
}

RearCenteredKinematicBicycleModelConfig::~RearCenteredKinematicBicycleModelConfig() {
  // @@protoc_insertion_point(destructor:apollo.common.RearCenteredKinematicBicycleModelConfig)
  SharedDtor();
}

void RearCenteredKinematicBicycleModelConfig::SharedDtor() {
}

void RearCenteredKinematicBicycleModelConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RearCenteredKinematicBicycleModelConfig::descriptor() {
  ::protobuf_vehicle_5fmodel_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vehicle_5fmodel_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RearCenteredKinematicBicycleModelConfig& RearCenteredKinematicBicycleModelConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vehicle_5fmodel_5fconfig_2eproto::scc_info_RearCenteredKinematicBicycleModelConfig.base);
  return *internal_default_instance();
}


void RearCenteredKinematicBicycleModelConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.common.RearCenteredKinematicBicycleModelConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dt_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RearCenteredKinematicBicycleModelConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.common.RearCenteredKinematicBicycleModelConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double dt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_dt();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.common.RearCenteredKinematicBicycleModelConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.common.RearCenteredKinematicBicycleModelConfig)
  return false;
#undef DO_
}

void RearCenteredKinematicBicycleModelConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.common.RearCenteredKinematicBicycleModelConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double dt = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->dt(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.common.RearCenteredKinematicBicycleModelConfig)
}

::google::protobuf::uint8* RearCenteredKinematicBicycleModelConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.common.RearCenteredKinematicBicycleModelConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double dt = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->dt(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.common.RearCenteredKinematicBicycleModelConfig)
  return target;
}

size_t RearCenteredKinematicBicycleModelConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.common.RearCenteredKinematicBicycleModelConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional double dt = 1;
  if (has_dt()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RearCenteredKinematicBicycleModelConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.common.RearCenteredKinematicBicycleModelConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const RearCenteredKinematicBicycleModelConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RearCenteredKinematicBicycleModelConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.common.RearCenteredKinematicBicycleModelConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.common.RearCenteredKinematicBicycleModelConfig)
    MergeFrom(*source);
  }
}

void RearCenteredKinematicBicycleModelConfig::MergeFrom(const RearCenteredKinematicBicycleModelConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.common.RearCenteredKinematicBicycleModelConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_dt()) {
    set_dt(from.dt());
  }
}

void RearCenteredKinematicBicycleModelConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.common.RearCenteredKinematicBicycleModelConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RearCenteredKinematicBicycleModelConfig::CopyFrom(const RearCenteredKinematicBicycleModelConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.common.RearCenteredKinematicBicycleModelConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RearCenteredKinematicBicycleModelConfig::IsInitialized() const {
  return true;
}

void RearCenteredKinematicBicycleModelConfig::Swap(RearCenteredKinematicBicycleModelConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RearCenteredKinematicBicycleModelConfig::InternalSwap(RearCenteredKinematicBicycleModelConfig* other) {
  using std::swap;
  swap(dt_, other->dt_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RearCenteredKinematicBicycleModelConfig::GetMetadata() const {
  protobuf_vehicle_5fmodel_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vehicle_5fmodel_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ComCenteredDynamicBicycleModelConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ComCenteredDynamicBicycleModelConfig::kDtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ComCenteredDynamicBicycleModelConfig::ComCenteredDynamicBicycleModelConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vehicle_5fmodel_5fconfig_2eproto::scc_info_ComCenteredDynamicBicycleModelConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.common.ComCenteredDynamicBicycleModelConfig)
}
ComCenteredDynamicBicycleModelConfig::ComCenteredDynamicBicycleModelConfig(const ComCenteredDynamicBicycleModelConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dt_ = from.dt_;
  // @@protoc_insertion_point(copy_constructor:apollo.common.ComCenteredDynamicBicycleModelConfig)
}

void ComCenteredDynamicBicycleModelConfig::SharedCtor() {
  dt_ = 0;
}

ComCenteredDynamicBicycleModelConfig::~ComCenteredDynamicBicycleModelConfig() {
  // @@protoc_insertion_point(destructor:apollo.common.ComCenteredDynamicBicycleModelConfig)
  SharedDtor();
}

void ComCenteredDynamicBicycleModelConfig::SharedDtor() {
}

void ComCenteredDynamicBicycleModelConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ComCenteredDynamicBicycleModelConfig::descriptor() {
  ::protobuf_vehicle_5fmodel_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vehicle_5fmodel_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ComCenteredDynamicBicycleModelConfig& ComCenteredDynamicBicycleModelConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vehicle_5fmodel_5fconfig_2eproto::scc_info_ComCenteredDynamicBicycleModelConfig.base);
  return *internal_default_instance();
}


void ComCenteredDynamicBicycleModelConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.common.ComCenteredDynamicBicycleModelConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dt_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ComCenteredDynamicBicycleModelConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.common.ComCenteredDynamicBicycleModelConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double dt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_dt();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.common.ComCenteredDynamicBicycleModelConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.common.ComCenteredDynamicBicycleModelConfig)
  return false;
#undef DO_
}

void ComCenteredDynamicBicycleModelConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.common.ComCenteredDynamicBicycleModelConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double dt = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->dt(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.common.ComCenteredDynamicBicycleModelConfig)
}

::google::protobuf::uint8* ComCenteredDynamicBicycleModelConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.common.ComCenteredDynamicBicycleModelConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double dt = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->dt(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.common.ComCenteredDynamicBicycleModelConfig)
  return target;
}

size_t ComCenteredDynamicBicycleModelConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.common.ComCenteredDynamicBicycleModelConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional double dt = 1;
  if (has_dt()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ComCenteredDynamicBicycleModelConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.common.ComCenteredDynamicBicycleModelConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const ComCenteredDynamicBicycleModelConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ComCenteredDynamicBicycleModelConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.common.ComCenteredDynamicBicycleModelConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.common.ComCenteredDynamicBicycleModelConfig)
    MergeFrom(*source);
  }
}

void ComCenteredDynamicBicycleModelConfig::MergeFrom(const ComCenteredDynamicBicycleModelConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.common.ComCenteredDynamicBicycleModelConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_dt()) {
    set_dt(from.dt());
  }
}

void ComCenteredDynamicBicycleModelConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.common.ComCenteredDynamicBicycleModelConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ComCenteredDynamicBicycleModelConfig::CopyFrom(const ComCenteredDynamicBicycleModelConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.common.ComCenteredDynamicBicycleModelConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComCenteredDynamicBicycleModelConfig::IsInitialized() const {
  return true;
}

void ComCenteredDynamicBicycleModelConfig::Swap(ComCenteredDynamicBicycleModelConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ComCenteredDynamicBicycleModelConfig::InternalSwap(ComCenteredDynamicBicycleModelConfig* other) {
  using std::swap;
  swap(dt_, other->dt_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ComCenteredDynamicBicycleModelConfig::GetMetadata() const {
  protobuf_vehicle_5fmodel_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vehicle_5fmodel_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MlpModelConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MlpModelConfig::kDtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MlpModelConfig::MlpModelConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vehicle_5fmodel_5fconfig_2eproto::scc_info_MlpModelConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.common.MlpModelConfig)
}
MlpModelConfig::MlpModelConfig(const MlpModelConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dt_ = from.dt_;
  // @@protoc_insertion_point(copy_constructor:apollo.common.MlpModelConfig)
}

void MlpModelConfig::SharedCtor() {
  dt_ = 0;
}

MlpModelConfig::~MlpModelConfig() {
  // @@protoc_insertion_point(destructor:apollo.common.MlpModelConfig)
  SharedDtor();
}

void MlpModelConfig::SharedDtor() {
}

void MlpModelConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MlpModelConfig::descriptor() {
  ::protobuf_vehicle_5fmodel_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vehicle_5fmodel_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MlpModelConfig& MlpModelConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vehicle_5fmodel_5fconfig_2eproto::scc_info_MlpModelConfig.base);
  return *internal_default_instance();
}


void MlpModelConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.common.MlpModelConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dt_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MlpModelConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.common.MlpModelConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double dt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_dt();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.common.MlpModelConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.common.MlpModelConfig)
  return false;
#undef DO_
}

void MlpModelConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.common.MlpModelConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double dt = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->dt(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.common.MlpModelConfig)
}

::google::protobuf::uint8* MlpModelConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.common.MlpModelConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double dt = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->dt(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.common.MlpModelConfig)
  return target;
}

size_t MlpModelConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.common.MlpModelConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional double dt = 1;
  if (has_dt()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MlpModelConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.common.MlpModelConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const MlpModelConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MlpModelConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.common.MlpModelConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.common.MlpModelConfig)
    MergeFrom(*source);
  }
}

void MlpModelConfig::MergeFrom(const MlpModelConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.common.MlpModelConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_dt()) {
    set_dt(from.dt());
  }
}

void MlpModelConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.common.MlpModelConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MlpModelConfig::CopyFrom(const MlpModelConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.common.MlpModelConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MlpModelConfig::IsInitialized() const {
  return true;
}

void MlpModelConfig::Swap(MlpModelConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MlpModelConfig::InternalSwap(MlpModelConfig* other) {
  using std::swap;
  swap(dt_, other->dt_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MlpModelConfig::GetMetadata() const {
  protobuf_vehicle_5fmodel_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vehicle_5fmodel_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace common
}  // namespace apollo
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::common::VehicleModelConfig* Arena::CreateMaybeMessage< ::apollo::common::VehicleModelConfig >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::common::VehicleModelConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::common::RearCenteredKinematicBicycleModelConfig* Arena::CreateMaybeMessage< ::apollo::common::RearCenteredKinematicBicycleModelConfig >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::common::RearCenteredKinematicBicycleModelConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::common::ComCenteredDynamicBicycleModelConfig* Arena::CreateMaybeMessage< ::apollo::common::ComCenteredDynamicBicycleModelConfig >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::common::ComCenteredDynamicBicycleModelConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::common::MlpModelConfig* Arena::CreateMaybeMessage< ::apollo::common::MlpModelConfig >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::common::MlpModelConfig >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
