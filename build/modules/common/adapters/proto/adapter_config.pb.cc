// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: adapter_config.proto

#include "adapter_config.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_adapter_5fconfig_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_adapter_5fconfig_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AdapterConfig;
}  // namespace protobuf_adapter_5fconfig_2eproto
namespace apollo {
namespace common {
namespace adapter {
class AdapterConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AdapterConfig>
      _instance;
} _AdapterConfig_default_instance_;
class AdapterManagerConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AdapterManagerConfig>
      _instance;
} _AdapterManagerConfig_default_instance_;
}  // namespace adapter
}  // namespace common
}  // namespace apollo
namespace protobuf_adapter_5fconfig_2eproto {
static void InitDefaultsAdapterConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::common::adapter::_AdapterConfig_default_instance_;
    new (ptr) ::apollo::common::adapter::AdapterConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::common::adapter::AdapterConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AdapterConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAdapterConfig}, {}};

static void InitDefaultsAdapterManagerConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::common::adapter::_AdapterManagerConfig_default_instance_;
    new (ptr) ::apollo::common::adapter::AdapterManagerConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::common::adapter::AdapterManagerConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AdapterManagerConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAdapterManagerConfig}, {
      &protobuf_adapter_5fconfig_2eproto::scc_info_AdapterConfig.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_AdapterConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AdapterManagerConfig.base);
}

::google::protobuf::Metadata file_level_metadata[2];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::common::adapter::AdapterConfig, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::common::adapter::AdapterConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::common::adapter::AdapterConfig, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::common::adapter::AdapterConfig, mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::common::adapter::AdapterConfig, message_history_limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::common::adapter::AdapterConfig, latch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::common::adapter::AdapterConfig, topic_),
  3,
  1,
  4,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::common::adapter::AdapterManagerConfig, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::common::adapter::AdapterManagerConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::common::adapter::AdapterManagerConfig, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::common::adapter::AdapterManagerConfig, is_ros_),
  ~0u,
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 10, sizeof(::apollo::common::adapter::AdapterConfig)},
  { 15, 22, sizeof(::apollo::common::adapter::AdapterManagerConfig)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::common::adapter::_AdapterConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::common::adapter::_AdapterManagerConfig_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "adapter_config.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\024adapter_config.proto\022\025apollo.common.ad"
      "apter\"\261\016\n\rAdapterConfig\022>\n\004type\030\001 \001(\01620."
      "apollo.common.adapter.AdapterConfig.Mess"
      "ageType\0227\n\004mode\030\002 \001(\0162).apollo.common.ad"
      "apter.AdapterConfig.Mode\022!\n\025message_hist"
      "ory_limit\030\003 \001(\005:\00210\022\024\n\005latch\030\004 \001(\010:\005fals"
      "e\022\r\n\005topic\030\005 \001(\t\"\246\014\n\013MessageType\022\017\n\013POIN"
      "T_CLOUD\020\001\022\025\n\021VLP16_POINT_CLOUD\020:\022\007\n\003GPS\020"
      "\002\022\007\n\003IMU\020\003\022\013\n\007CHASSIS\020\004\022\020\n\014LOCALIZATION\020"
      "\005\022\027\n\023PLANNING_TRAJECTORY\020\006\022\013\n\007MONITOR\020\007\022"
      "\007\n\003PAD\020\010\022\023\n\017CONTROL_COMMAND\020\t\022\016\n\nPREDICT"
      "ION\020\n\022\030\n\024PERCEPTION_OBSTACLES\020\013\022\033\n\027TRAFF"
      "IC_LIGHT_DETECTION\020\014\022\022\n\016CHASSIS_DETAIL\020\r"
      "\022\020\n\010DECISION\020\016\032\002\010\001\022\n\n\006CANBUS\020\017\022\023\n\017ROUTIN"
      "G_REQUEST\020\020\022\024\n\020ROUTING_RESPONSE\020\021\022\025\n\021REL"
      "ATIVE_ODOMETRY\020\022\022\014\n\010INS_STAT\020\023\022\023\n\013HMI_CO"
      "MMAND\020\024\032\002\010\001\022\014\n\010MOBILEYE\020\025\022\r\n\tDELPHIESR\020\026"
      "\022\024\n\020COMPRESSED_IMAGE\020\027\022\021\n\rSYSTEM_STATUS\020"
      "\030\022\016\n\nINS_STATUS\020\031\022\017\n\013GNSS_STATUS\020\032\022\017\n\013CO"
      "NTI_RADAR\020\033\022\017\n\013IMAGE_SHORT\020\034\022\016\n\nIMAGE_LO"
      "NG\020\035\022\017\n\013DRIVE_EVENT\020\036\022\020\n\014GNSS_RTK_OBS\020\037\022"
      "\020\n\014GNSS_RTK_EPH\020 \022\022\n\016GNSS_BEST_POSE\020!\022\031\n"
      "\025LOCALIZATION_MSF_GNSS\020\"\022\032\n\026LOCALIZATION"
      "_MSF_LIDAR\020#\022\035\n\031LOCALIZATION_MSF_SINS_PV"
      "A\020$\022\013\n\007RAW_IMU\020%\022\033\n\027LOCALIZATION_MSF_STA"
      "TUS\020&\022\017\n\013STATIC_INFO\020\'\022\020\n\014RELATIVE_MAP\020("
      "\022\016\n\nNAVIGATION\020)\022\024\n\020ULTRASONIC_RADAR\020*\022\021"
      "\n\rAUDIO_CAPTURE\020+\022\017\n\013IMAGE_FRONT\020-\022\027\n\023PA"
      "NDORA_POINT_CLOUD\020.\022\036\n\032PANDORA_CAMERA_FR"
      "ONT_COLOR\020/\022\035\n\031PANDORA_CAMERA_RIGHT_GRAY"
      "\0200\022\034\n\030PANDORA_CAMERA_LEFT_GRAY\0201\022\035\n\031PAND"
      "ORA_CAMERA_FRONT_GRAY\0202\022\034\n\030PANDORA_CAMER"
      "A_BACK_GRAY\0203\022\030\n\024PERCEPTION_LANE_MASK\0204\022"
      "\014\n\010GUARDIAN\0205\022\021\n\rGNSS_RAW_DATA\0206\022\021\n\rSTRE"
      "AM_STATUS\0207\022\020\n\014GNSS_HEADING\0208\022\r\n\tRTCM_DA"
      "TA\0209\022\021\n\rRACOBIT_RADAR\020;\022\025\n\021POINT_CLOUD_D"
      "ENSE\020<\022\031\n\025POINT_CLOUD_DENSE_RAW\020=\022\027\n\023VEL"
      "ODYNE_SCAN_DENSE\020>\022\030\n\024POINT_CLOUD_SPARSE"
      "_1\020\?\022\034\n\030POINT_CLOUD_SPARSE_RAW_1\020@\022\032\n\026VE"
      "LODYNE_SCAN_SPARSE_1\020A\022\030\n\024POINT_CLOUD_SP"
      "ARSE_2\020B\022\034\n\030POINT_CLOUD_SPARSE_RAW_2\020C\022\032"
      "\n\026VELODYNE_SCAN_SPARSE_2\020D\022\030\n\024POINT_CLOU"
      "D_SPARSE_3\020E\022\034\n\030POINT_CLOUD_SPARSE_RAW_3"
      "\020F\022\032\n\026VELODYNE_SCAN_SPARSE_3\020G\022\025\n\021CAMERA"
      "_IMAGE_LONG\020H\022\026\n\022CAMERA_IMAGE_SHORT\020I\022\020\n"
      "\014PLANNING_PAD\020J\022\020\n\014STORYTELLING\020K\"6\n\004Mod"
      "e\022\020\n\014RECEIVE_ONLY\020\000\022\020\n\014PUBLISH_ONLY\020\001\022\n\n"
      "\006DUPLEX\020\002\"\\\n\024AdapterManagerConfig\0224\n\006con"
      "fig\030\001 \003(\0132$.apollo.common.adapter.Adapte"
      "rConfig\022\016\n\006is_ros\030\002 \001(\010"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1983);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "adapter_config.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_adapter_5fconfig_2eproto
namespace apollo {
namespace common {
namespace adapter {
const ::google::protobuf::EnumDescriptor* AdapterConfig_MessageType_descriptor() {
  protobuf_adapter_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_adapter_5fconfig_2eproto::file_level_enum_descriptors[0];
}
bool AdapterConfig_MessageType_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
    case 64:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const AdapterConfig_MessageType AdapterConfig::POINT_CLOUD;
const AdapterConfig_MessageType AdapterConfig::VLP16_POINT_CLOUD;
const AdapterConfig_MessageType AdapterConfig::GPS;
const AdapterConfig_MessageType AdapterConfig::IMU;
const AdapterConfig_MessageType AdapterConfig::CHASSIS;
const AdapterConfig_MessageType AdapterConfig::LOCALIZATION;
const AdapterConfig_MessageType AdapterConfig::PLANNING_TRAJECTORY;
const AdapterConfig_MessageType AdapterConfig::MONITOR;
const AdapterConfig_MessageType AdapterConfig::PAD;
const AdapterConfig_MessageType AdapterConfig::CONTROL_COMMAND;
const AdapterConfig_MessageType AdapterConfig::PREDICTION;
const AdapterConfig_MessageType AdapterConfig::PERCEPTION_OBSTACLES;
const AdapterConfig_MessageType AdapterConfig::TRAFFIC_LIGHT_DETECTION;
const AdapterConfig_MessageType AdapterConfig::CHASSIS_DETAIL;
const AdapterConfig_MessageType AdapterConfig::DECISION;
const AdapterConfig_MessageType AdapterConfig::CANBUS;
const AdapterConfig_MessageType AdapterConfig::ROUTING_REQUEST;
const AdapterConfig_MessageType AdapterConfig::ROUTING_RESPONSE;
const AdapterConfig_MessageType AdapterConfig::RELATIVE_ODOMETRY;
const AdapterConfig_MessageType AdapterConfig::INS_STAT;
const AdapterConfig_MessageType AdapterConfig::HMI_COMMAND;
const AdapterConfig_MessageType AdapterConfig::MOBILEYE;
const AdapterConfig_MessageType AdapterConfig::DELPHIESR;
const AdapterConfig_MessageType AdapterConfig::COMPRESSED_IMAGE;
const AdapterConfig_MessageType AdapterConfig::SYSTEM_STATUS;
const AdapterConfig_MessageType AdapterConfig::INS_STATUS;
const AdapterConfig_MessageType AdapterConfig::GNSS_STATUS;
const AdapterConfig_MessageType AdapterConfig::CONTI_RADAR;
const AdapterConfig_MessageType AdapterConfig::IMAGE_SHORT;
const AdapterConfig_MessageType AdapterConfig::IMAGE_LONG;
const AdapterConfig_MessageType AdapterConfig::DRIVE_EVENT;
const AdapterConfig_MessageType AdapterConfig::GNSS_RTK_OBS;
const AdapterConfig_MessageType AdapterConfig::GNSS_RTK_EPH;
const AdapterConfig_MessageType AdapterConfig::GNSS_BEST_POSE;
const AdapterConfig_MessageType AdapterConfig::LOCALIZATION_MSF_GNSS;
const AdapterConfig_MessageType AdapterConfig::LOCALIZATION_MSF_LIDAR;
const AdapterConfig_MessageType AdapterConfig::LOCALIZATION_MSF_SINS_PVA;
const AdapterConfig_MessageType AdapterConfig::RAW_IMU;
const AdapterConfig_MessageType AdapterConfig::LOCALIZATION_MSF_STATUS;
const AdapterConfig_MessageType AdapterConfig::STATIC_INFO;
const AdapterConfig_MessageType AdapterConfig::RELATIVE_MAP;
const AdapterConfig_MessageType AdapterConfig::NAVIGATION;
const AdapterConfig_MessageType AdapterConfig::ULTRASONIC_RADAR;
const AdapterConfig_MessageType AdapterConfig::AUDIO_CAPTURE;
const AdapterConfig_MessageType AdapterConfig::IMAGE_FRONT;
const AdapterConfig_MessageType AdapterConfig::PANDORA_POINT_CLOUD;
const AdapterConfig_MessageType AdapterConfig::PANDORA_CAMERA_FRONT_COLOR;
const AdapterConfig_MessageType AdapterConfig::PANDORA_CAMERA_RIGHT_GRAY;
const AdapterConfig_MessageType AdapterConfig::PANDORA_CAMERA_LEFT_GRAY;
const AdapterConfig_MessageType AdapterConfig::PANDORA_CAMERA_FRONT_GRAY;
const AdapterConfig_MessageType AdapterConfig::PANDORA_CAMERA_BACK_GRAY;
const AdapterConfig_MessageType AdapterConfig::PERCEPTION_LANE_MASK;
const AdapterConfig_MessageType AdapterConfig::GUARDIAN;
const AdapterConfig_MessageType AdapterConfig::GNSS_RAW_DATA;
const AdapterConfig_MessageType AdapterConfig::STREAM_STATUS;
const AdapterConfig_MessageType AdapterConfig::GNSS_HEADING;
const AdapterConfig_MessageType AdapterConfig::RTCM_DATA;
const AdapterConfig_MessageType AdapterConfig::RACOBIT_RADAR;
const AdapterConfig_MessageType AdapterConfig::POINT_CLOUD_DENSE;
const AdapterConfig_MessageType AdapterConfig::POINT_CLOUD_DENSE_RAW;
const AdapterConfig_MessageType AdapterConfig::VELODYNE_SCAN_DENSE;
const AdapterConfig_MessageType AdapterConfig::POINT_CLOUD_SPARSE_1;
const AdapterConfig_MessageType AdapterConfig::POINT_CLOUD_SPARSE_RAW_1;
const AdapterConfig_MessageType AdapterConfig::VELODYNE_SCAN_SPARSE_1;
const AdapterConfig_MessageType AdapterConfig::POINT_CLOUD_SPARSE_2;
const AdapterConfig_MessageType AdapterConfig::POINT_CLOUD_SPARSE_RAW_2;
const AdapterConfig_MessageType AdapterConfig::VELODYNE_SCAN_SPARSE_2;
const AdapterConfig_MessageType AdapterConfig::POINT_CLOUD_SPARSE_3;
const AdapterConfig_MessageType AdapterConfig::POINT_CLOUD_SPARSE_RAW_3;
const AdapterConfig_MessageType AdapterConfig::VELODYNE_SCAN_SPARSE_3;
const AdapterConfig_MessageType AdapterConfig::CAMERA_IMAGE_LONG;
const AdapterConfig_MessageType AdapterConfig::CAMERA_IMAGE_SHORT;
const AdapterConfig_MessageType AdapterConfig::PLANNING_PAD;
const AdapterConfig_MessageType AdapterConfig::STORYTELLING;
const AdapterConfig_MessageType AdapterConfig::MessageType_MIN;
const AdapterConfig_MessageType AdapterConfig::MessageType_MAX;
const int AdapterConfig::MessageType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* AdapterConfig_Mode_descriptor() {
  protobuf_adapter_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_adapter_5fconfig_2eproto::file_level_enum_descriptors[1];
}
bool AdapterConfig_Mode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const AdapterConfig_Mode AdapterConfig::RECEIVE_ONLY;
const AdapterConfig_Mode AdapterConfig::PUBLISH_ONLY;
const AdapterConfig_Mode AdapterConfig::DUPLEX;
const AdapterConfig_Mode AdapterConfig::Mode_MIN;
const AdapterConfig_Mode AdapterConfig::Mode_MAX;
const int AdapterConfig::Mode_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void AdapterConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AdapterConfig::kTypeFieldNumber;
const int AdapterConfig::kModeFieldNumber;
const int AdapterConfig::kMessageHistoryLimitFieldNumber;
const int AdapterConfig::kLatchFieldNumber;
const int AdapterConfig::kTopicFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AdapterConfig::AdapterConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_adapter_5fconfig_2eproto::scc_info_AdapterConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.common.adapter.AdapterConfig)
}
AdapterConfig::AdapterConfig(const AdapterConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_topic()) {
    topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.topic_);
  }
  ::memcpy(&mode_, &from.mode_,
    static_cast<size_t>(reinterpret_cast<char*>(&message_history_limit_) -
    reinterpret_cast<char*>(&mode_)) + sizeof(message_history_limit_));
  // @@protoc_insertion_point(copy_constructor:apollo.common.adapter.AdapterConfig)
}

void AdapterConfig::SharedCtor() {
  topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&mode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&latch_) -
      reinterpret_cast<char*>(&mode_)) + sizeof(latch_));
  type_ = 1;
  message_history_limit_ = 10;
}

AdapterConfig::~AdapterConfig() {
  // @@protoc_insertion_point(destructor:apollo.common.adapter.AdapterConfig)
  SharedDtor();
}

void AdapterConfig::SharedDtor() {
  topic_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AdapterConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AdapterConfig::descriptor() {
  ::protobuf_adapter_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_adapter_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AdapterConfig& AdapterConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_adapter_5fconfig_2eproto::scc_info_AdapterConfig.base);
  return *internal_default_instance();
}


void AdapterConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.common.adapter.AdapterConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    topic_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 30u) {
    ::memset(&mode_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&latch_) -
        reinterpret_cast<char*>(&mode_)) + sizeof(latch_));
    type_ = 1;
    message_history_limit_ = 10;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AdapterConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.common.adapter.AdapterConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .apollo.common.adapter.AdapterConfig.MessageType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::common::adapter::AdapterConfig_MessageType_IsValid(value)) {
            set_type(static_cast< ::apollo::common::adapter::AdapterConfig_MessageType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.common.adapter.AdapterConfig.Mode mode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::common::adapter::AdapterConfig_Mode_IsValid(value)) {
            set_mode(static_cast< ::apollo::common::adapter::AdapterConfig_Mode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 message_history_limit = 3 [default = 10];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_message_history_limit();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &message_history_limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool latch = 4 [default = false];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_latch();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &latch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string topic = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_topic()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->topic().data(), static_cast<int>(this->topic().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.common.adapter.AdapterConfig.topic");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.common.adapter.AdapterConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.common.adapter.AdapterConfig)
  return false;
#undef DO_
}

void AdapterConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.common.adapter.AdapterConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.common.adapter.AdapterConfig.MessageType type = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional .apollo.common.adapter.AdapterConfig.Mode mode = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->mode(), output);
  }

  // optional int32 message_history_limit = 3 [default = 10];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->message_history_limit(), output);
  }

  // optional bool latch = 4 [default = false];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->latch(), output);
  }

  // optional string topic = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->topic().data(), static_cast<int>(this->topic().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.common.adapter.AdapterConfig.topic");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->topic(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.common.adapter.AdapterConfig)
}

::google::protobuf::uint8* AdapterConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.common.adapter.AdapterConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.common.adapter.AdapterConfig.MessageType type = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional .apollo.common.adapter.AdapterConfig.Mode mode = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->mode(), target);
  }

  // optional int32 message_history_limit = 3 [default = 10];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->message_history_limit(), target);
  }

  // optional bool latch = 4 [default = false];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->latch(), target);
  }

  // optional string topic = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->topic().data(), static_cast<int>(this->topic().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.common.adapter.AdapterConfig.topic");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->topic(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.common.adapter.AdapterConfig)
  return target;
}

size_t AdapterConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.common.adapter.AdapterConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string topic = 5;
    if (has_topic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->topic());
    }

    // optional .apollo.common.adapter.AdapterConfig.Mode mode = 2;
    if (has_mode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->mode());
    }

    // optional bool latch = 4 [default = false];
    if (has_latch()) {
      total_size += 1 + 1;
    }

    // optional .apollo.common.adapter.AdapterConfig.MessageType type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

    // optional int32 message_history_limit = 3 [default = 10];
    if (has_message_history_limit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->message_history_limit());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AdapterConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.common.adapter.AdapterConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const AdapterConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AdapterConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.common.adapter.AdapterConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.common.adapter.AdapterConfig)
    MergeFrom(*source);
  }
}

void AdapterConfig::MergeFrom(const AdapterConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.common.adapter.AdapterConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_topic();
      topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.topic_);
    }
    if (cached_has_bits & 0x00000002u) {
      mode_ = from.mode_;
    }
    if (cached_has_bits & 0x00000004u) {
      latch_ = from.latch_;
    }
    if (cached_has_bits & 0x00000008u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000010u) {
      message_history_limit_ = from.message_history_limit_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AdapterConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.common.adapter.AdapterConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AdapterConfig::CopyFrom(const AdapterConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.common.adapter.AdapterConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AdapterConfig::IsInitialized() const {
  return true;
}

void AdapterConfig::Swap(AdapterConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AdapterConfig::InternalSwap(AdapterConfig* other) {
  using std::swap;
  topic_.Swap(&other->topic_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(mode_, other->mode_);
  swap(latch_, other->latch_);
  swap(type_, other->type_);
  swap(message_history_limit_, other->message_history_limit_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AdapterConfig::GetMetadata() const {
  protobuf_adapter_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_adapter_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AdapterManagerConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AdapterManagerConfig::kConfigFieldNumber;
const int AdapterManagerConfig::kIsRosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AdapterManagerConfig::AdapterManagerConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_adapter_5fconfig_2eproto::scc_info_AdapterManagerConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.common.adapter.AdapterManagerConfig)
}
AdapterManagerConfig::AdapterManagerConfig(const AdapterManagerConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      config_(from.config_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  is_ros_ = from.is_ros_;
  // @@protoc_insertion_point(copy_constructor:apollo.common.adapter.AdapterManagerConfig)
}

void AdapterManagerConfig::SharedCtor() {
  is_ros_ = false;
}

AdapterManagerConfig::~AdapterManagerConfig() {
  // @@protoc_insertion_point(destructor:apollo.common.adapter.AdapterManagerConfig)
  SharedDtor();
}

void AdapterManagerConfig::SharedDtor() {
}

void AdapterManagerConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AdapterManagerConfig::descriptor() {
  ::protobuf_adapter_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_adapter_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AdapterManagerConfig& AdapterManagerConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_adapter_5fconfig_2eproto::scc_info_AdapterManagerConfig.base);
  return *internal_default_instance();
}


void AdapterManagerConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.common.adapter.AdapterManagerConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  config_.Clear();
  is_ros_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AdapterManagerConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.common.adapter.AdapterManagerConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .apollo.common.adapter.AdapterConfig config = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_ros = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_is_ros();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_ros_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.common.adapter.AdapterManagerConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.common.adapter.AdapterManagerConfig)
  return false;
#undef DO_
}

void AdapterManagerConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.common.adapter.AdapterManagerConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .apollo.common.adapter.AdapterConfig config = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->config_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->config(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // optional bool is_ros = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_ros(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.common.adapter.AdapterManagerConfig)
}

::google::protobuf::uint8* AdapterManagerConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.common.adapter.AdapterManagerConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .apollo.common.adapter.AdapterConfig config = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->config_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->config(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional bool is_ros = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_ros(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.common.adapter.AdapterManagerConfig)
  return target;
}

size_t AdapterManagerConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.common.adapter.AdapterManagerConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .apollo.common.adapter.AdapterConfig config = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->config_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->config(static_cast<int>(i)));
    }
  }

  // optional bool is_ros = 2;
  if (has_is_ros()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AdapterManagerConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.common.adapter.AdapterManagerConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const AdapterManagerConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AdapterManagerConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.common.adapter.AdapterManagerConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.common.adapter.AdapterManagerConfig)
    MergeFrom(*source);
  }
}

void AdapterManagerConfig::MergeFrom(const AdapterManagerConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.common.adapter.AdapterManagerConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  config_.MergeFrom(from.config_);
  if (from.has_is_ros()) {
    set_is_ros(from.is_ros());
  }
}

void AdapterManagerConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.common.adapter.AdapterManagerConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AdapterManagerConfig::CopyFrom(const AdapterManagerConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.common.adapter.AdapterManagerConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AdapterManagerConfig::IsInitialized() const {
  return true;
}

void AdapterManagerConfig::Swap(AdapterManagerConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AdapterManagerConfig::InternalSwap(AdapterManagerConfig* other) {
  using std::swap;
  CastToBase(&config_)->InternalSwap(CastToBase(&other->config_));
  swap(is_ros_, other->is_ros_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AdapterManagerConfig::GetMetadata() const {
  protobuf_adapter_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_adapter_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace adapter
}  // namespace common
}  // namespace apollo
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::common::adapter::AdapterConfig* Arena::CreateMaybeMessage< ::apollo::common::adapter::AdapterConfig >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::common::adapter::AdapterConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::common::adapter::AdapterManagerConfig* Arena::CreateMaybeMessage< ::apollo::common::adapter::AdapterManagerConfig >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::common::adapter::AdapterManagerConfig >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
